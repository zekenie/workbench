/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'AccessToken': { kind: 'OBJECT'; name: 'AccessToken'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AccessTokenType'; ofType: null; }; } }; }; };
    'AccessTokenConnection': { kind: 'OBJECT'; name: 'AccessTokenConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessTokenEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessToken'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AccessTokenEdge': { kind: 'OBJECT'; name: 'AccessTokenEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AccessToken'; ofType: null; } }; }; };
    'AccessTokenType': { name: 'AccessTokenType'; enumValues: 'flyctl' | 'ui' | 'pat' | 'grafana' | 'all' | 'sentry' | 'token'; };
    'AddCertificatePayload': { kind: 'OBJECT'; name: 'AddCertificatePayload'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'certificate': { name: 'certificate'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; 'check': { name: 'check'; type: { kind: 'OBJECT'; name: 'HostnameCheck'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'AddOn': { kind: 'OBJECT'; name: 'AddOn'; fields: { 'addOnPlan': { name: 'addOnPlan'; type: { kind: 'OBJECT'; name: 'AddOnPlan'; ofType: null; } }; 'addOnPlanName': { name: 'addOnPlanName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'addOnProvider': { name: 'addOnProvider'; type: { kind: 'OBJECT'; name: 'AddOnProvider'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'apps': { name: 'apps'; type: { kind: 'OBJECT'; name: 'AppConnection'; ofType: null; } }; 'environment': { name: 'environment'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errorMessage': { name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hostname': { name: 'hostname'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'options': { name: 'options'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'primaryRegion': { name: 'primaryRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateIp': { name: 'privateIp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicUrl': { name: 'publicUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'readRegions': { name: 'readRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'ssoLink': { name: 'ssoLink'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stats': { name: 'stats'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AddOnConnection': { kind: 'OBJECT'; name: 'AddOnConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOn'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AddOnEdge': { kind: 'OBJECT'; name: 'AddOnEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AddOn'; ofType: null; } }; }; };
    'AddOnPlan': { kind: 'OBJECT'; name: 'AddOnPlan'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'displayName': { name: 'displayName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'maxCommandsPerSec': { name: 'maxCommandsPerSec'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxConcurrentConnections': { name: 'maxConcurrentConnections'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxDailyBandwidth': { name: 'maxDailyBandwidth'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'maxDailyCommands': { name: 'maxDailyCommands'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxDataSize': { name: 'maxDataSize'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'maxRequestSize': { name: 'maxRequestSize'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pricePerMonth': { name: 'pricePerMonth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AddOnPlanConnection': { kind: 'OBJECT'; name: 'AddOnPlanConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnPlanEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnPlan'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AddOnPlanEdge': { kind: 'OBJECT'; name: 'AddOnPlanEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AddOnPlan'; ofType: null; } }; }; };
    'AddOnProvider': { kind: 'OBJECT'; name: 'AddOnProvider'; fields: { 'asyncProvisioning': { name: 'asyncProvisioning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'autoProvision': { name: 'autoProvision'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'beta': { name: 'beta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'detectPlatform': { name: 'detectPlatform'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'displayName': { name: 'displayName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'excludedRegions': { name: 'excludedRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internal': { name: 'internal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nameSuffix': { name: 'nameSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provisioningInstructions': { name: 'provisioningInstructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'regions': { name: 'regions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; } }; 'resourceName': { name: 'resourceName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'selectName': { name: 'selectName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'selectRegion': { name: 'selectRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'selectReplicaRegions': { name: 'selectReplicaRegions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tosAgreement': { name: 'tosAgreement'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tosUrl': { name: 'tosUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AddOnType': { name: 'AddOnType'; enumValues: 'redis' | 'upstash_redis' | 'upstash_kafka' | 'upstash_vector' | 'sentry' | 'kubernetes' | 'supabase' | 'tigris' | 'enveloop' | 'wafris' | 'arcjet' | 'fly_mysql'; };
    'AddWireGuardPeerInput': { kind: 'INPUT_OBJECT'; name: 'AddWireGuardPeerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pubkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'network'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nats'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'AddWireGuardPeerPayload': { kind: 'OBJECT'; name: 'AddWireGuardPeerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endpointip': { name: 'endpointip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'network': { name: 'network'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'peerip': { name: 'peerip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pubkey': { name: 'pubkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AllocateEgressIPAddressInput': { kind: 'INPUT_OBJECT'; name: 'AllocateEgressIPAddressInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'machineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'AllocateEgressIPAddressPayload': { kind: 'OBJECT'; name: 'AllocateEgressIPAddressPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'v4': { name: 'v4'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'v6': { name: 'v6'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AllocateIPAddressInput': { kind: 'INPUT_OBJECT'; name: 'AllocateIPAddressInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IPAddressType'; ofType: null; }; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'network'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'serviceName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AllocateIPAddressPayload': { kind: 'OBJECT'; name: 'AllocateIPAddressPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'OBJECT'; name: 'IPAddress'; ofType: null; } }; }; };
    'Allocation': { kind: 'OBJECT'; name: 'Allocation'; fields: { 'attachedVolumes': { name: 'attachedVolumes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeConnection'; ofType: null; }; } }; 'canary': { name: 'canary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'checks': { name: 'checks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckState'; ofType: null; }; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'criticalCheckCount': { name: 'criticalCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'desiredStatus': { name: 'desiredStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AllocationEvent'; ofType: null; }; }; }; } }; 'failed': { name: 'failed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthy': { name: 'healthy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'idShort': { name: 'idShort'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latestVersion': { name: 'latestVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'passingCheckCount': { name: 'passingCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'privateIP': { name: 'privateIP'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recentLogs': { name: 'recentLogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LogEntry'; ofType: null; }; }; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'restarts': { name: 'restarts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taskName': { name: 'taskName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalCheckCount': { name: 'totalCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'transitioning': { name: 'transitioning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'warningCheckCount': { name: 'warningCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AllocationEvent': { kind: 'OBJECT'; name: 'AllocationEvent'; fields: { 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'App': { kind: 'OBJECT'; name: 'App'; fields: { 'addOns': { name: 'addOns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnConnection'; ofType: null; }; } }; 'allocation': { name: 'allocation'; type: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; } }; 'allocations': { name: 'allocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; }; }; }; } }; 'appUrl': { name: 'appUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'autoscaling': { name: 'autoscaling'; type: { kind: 'OBJECT'; name: 'AutoscalingConfig'; ofType: null; } }; 'backupRegions': { name: 'backupRegions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; }; } }; 'builds': { name: 'builds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BuildConnection'; ofType: null; }; } }; 'certificate': { name: 'certificate'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; 'certificates': { name: 'certificates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCertificateConnection'; ofType: null; }; } }; 'changes': { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppChangeConnection'; ofType: null; }; } }; 'config': { name: 'config'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConfig'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'currentLock': { name: 'currentLock'; type: { kind: 'OBJECT'; name: 'AppLock'; ofType: null; } }; 'currentPlacement': { name: 'currentPlacement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RegionPlacement'; ofType: null; }; }; }; } }; 'currentRelease': { name: 'currentRelease'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; 'currentReleaseUnprocessed': { name: 'currentReleaseUnprocessed'; type: { kind: 'OBJECT'; name: 'ReleaseUnprocessed'; ofType: null; } }; 'deployed': { name: 'deployed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deploymentSource': { name: 'deploymentSource'; type: { kind: 'OBJECT'; name: 'DeploymentSource'; ofType: null; } }; 'deploymentStatus': { name: 'deploymentStatus'; type: { kind: 'OBJECT'; name: 'DeploymentStatus'; ofType: null; } }; 'hasDeploymentSource': { name: 'hasDeploymentSource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthChecks': { name: 'healthChecks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckStateConnection'; ofType: null; }; } }; 'hostIssues': { name: 'hostIssues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'hostname': { name: 'hostname'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'imageDetails': { name: 'imageDetails'; type: { kind: 'OBJECT'; name: 'ImageVersion'; ofType: null; } }; 'imageUpgradeAvailable': { name: 'imageUpgradeAvailable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'imageVersionTrackingEnabled': { name: 'imageVersionTrackingEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'instrumentsKey': { name: 'instrumentsKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'internalId': { name: 'internalId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'internalNumericId': { name: 'internalNumericId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'OBJECT'; name: 'IPAddress'; ofType: null; } }; 'ipAddresses': { name: 'ipAddresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IPAddressConnection'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'latestImageDetails': { name: 'latestImageDetails'; type: { kind: 'OBJECT'; name: 'ImageVersion'; ofType: null; } }; 'limitedAccessTokens': { name: 'limitedAccessTokens'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitedAccessTokenConnection'; ofType: null; }; } }; 'machine': { name: 'machine'; type: { kind: 'OBJECT'; name: 'Machine'; ofType: null; } }; 'machines': { name: 'machines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'network': { name: 'network'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'networkId': { name: 'networkId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'parseConfig': { name: 'parseConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConfig'; ofType: null; }; } }; 'platformVersion': { name: 'platformVersion'; type: { kind: 'ENUM'; name: 'PlatformVersionEnum'; ofType: null; } }; 'processGroups': { name: 'processGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProcessGroup'; ofType: null; }; }; }; } }; 'regions': { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; }; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; 'releases': { name: 'releases'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseConnection'; ofType: null; }; } }; 'releasesUnprocessed': { name: 'releasesUnprocessed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseUnprocessedConnection'; ofType: null; }; } }; 'role': { name: 'role'; type: { kind: 'INTERFACE'; name: 'AppRole'; ofType: null; } }; 'runtime': { name: 'runtime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RuntimeType'; ofType: null; }; } }; 'secrets': { name: 'secrets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Secret'; ofType: null; }; }; }; } }; 'services': { name: 'services'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Service'; ofType: null; }; }; }; } }; 'sharedIpAddress': { name: 'sharedIpAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taskGroupCounts': { name: 'taskGroupCounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaskGroupCount'; ofType: null; }; }; }; } }; 'usage': { name: 'usage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppUsage'; ofType: null; }; }; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'vmSize': { name: 'vmSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VMSize'; ofType: null; }; } }; 'vms': { name: 'vms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VMConnection'; ofType: null; }; } }; 'volume': { name: 'volume'; type: { kind: 'OBJECT'; name: 'Volume'; ofType: null; } }; 'volumes': { name: 'volumes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeConnection'; ofType: null; }; } }; }; };
    'AppCertificate': { kind: 'OBJECT'; name: 'AppCertificate'; fields: { 'acmeAlpnConfigured': { name: 'acmeAlpnConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'acmeDnsConfigured': { name: 'acmeDnsConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'certificateAuthority': { name: 'certificateAuthority'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'certificateRequestedAt': { name: 'certificateRequestedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'check': { name: 'check'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'clientStatus': { name: 'clientStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'configured': { name: 'configured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'dnsProvider': { name: 'dnsProvider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsValidationHostname': { name: 'dnsValidationHostname'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dnsValidationInstructions': { name: 'dnsValidationInstructions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dnsValidationTarget': { name: 'dnsValidationTarget'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hostname': { name: 'hostname'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isAcmeAlpnConfigured': { name: 'isAcmeAlpnConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isAcmeDnsConfigured': { name: 'isAcmeDnsConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isApex': { name: 'isApex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isConfigured': { name: 'isConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isWildcard': { name: 'isWildcard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'issued': { name: 'issued'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CertificateConnection'; ofType: null; }; } }; 'source': { name: 'source'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'validationErrors': { name: 'validationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCertificateValidationError'; ofType: null; }; }; }; } }; }; };
    'AppCertificateConnection': { kind: 'OBJECT'; name: 'AppCertificateConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCertificateEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AppCertificateEdge': { kind: 'OBJECT'; name: 'AppCertificateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; }; };
    'AppCertificateValidationError': { kind: 'OBJECT'; name: 'AppCertificateValidationError'; fields: { 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'AppChange': { kind: 'OBJECT'; name: 'AppChange'; fields: { 'actor': { name: 'actor'; type: { kind: 'UNION'; name: 'AppChangeActor'; ofType: null; } }; 'actorType': { name: 'actorType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AppChangeActor': { kind: 'UNION'; name: 'AppChangeActor'; fields: {}; possibleTypes: 'Build' | 'Release' | 'Secret'; };
    'AppChangeConnection': { kind: 'OBJECT'; name: 'AppChangeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AppChangeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AppChange'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AppChangeEdge': { kind: 'OBJECT'; name: 'AppChangeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AppChange'; ofType: null; } }; }; };
    'AppConfig': { kind: 'OBJECT'; name: 'AppConfig'; fields: { 'definition': { name: 'definition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'services': { name: 'services'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Service'; ofType: null; }; }; }; } }; 'valid': { name: 'valid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AppConnection': { kind: 'OBJECT'; name: 'AppConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AppEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AppEdge': { kind: 'OBJECT'; name: 'AppEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; }; };
    'AppLock': { kind: 'OBJECT'; name: 'AppLock'; fields: { 'expiration': { name: 'expiration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'lockId': { name: 'lockId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'AppRole': { kind: 'INTERFACE'; name: 'AppRole'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'EmptyAppRole' | 'FlyctlMachineHostAppRole' | 'PostgresClusterAppRole' | 'RemoteDockerBuilderAppRole'; };
    'AppState': { name: 'AppState'; enumValues: 'PENDING' | 'DEPLOYED' | 'SUSPENDED'; };
    'AppUsage': { kind: 'OBJECT'; name: 'AppUsage'; fields: { 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'requestsCount': { name: 'requestsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalAppExecS': { name: 'totalAppExecS'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalDataOutGB': { name: 'totalDataOutGB'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'ts': { name: 'ts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'AttachPostgresClusterInput': { kind: 'INPUT_OBJECT'; name: 'AttachPostgresClusterInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'postgresClusterAppId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'databaseName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'databaseUser'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'variableName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'manualEntry'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'AttachPostgresClusterPayload': { kind: 'OBJECT'; name: 'AttachPostgresClusterPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'connectionString': { name: 'connectionString'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'environmentVariableName': { name: 'environmentVariableName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'postgresClusterApp': { name: 'postgresClusterApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; }; };
    'AutoscaleRegionConfig': { kind: 'OBJECT'; name: 'AutoscaleRegionConfig'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'minCount': { name: 'minCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AutoscaleRegionConfigInput': { kind: 'INPUT_OBJECT'; name: 'AutoscaleRegionConfigInput'; isOneOf: false; inputFields: [{ name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'minCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'reset'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'AutoscaleStrategy': { name: 'AutoscaleStrategy'; enumValues: 'NONE' | 'PREFERRED_REGIONS' | 'CONNECTION_SOURCES'; };
    'AutoscalingConfig': { kind: 'OBJECT'; name: 'AutoscalingConfig'; fields: { 'backupRegions': { name: 'backupRegions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'balanceRegions': { name: 'balanceRegions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'maxCount': { name: 'maxCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'minCount': { name: 'minCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'preferredRegion': { name: 'preferredRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'regions': { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AutoscaleRegionConfig'; ofType: null; }; }; }; } }; 'strategy': { name: 'strategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AutoscaleStrategy'; ofType: null; }; } }; }; };
    'BigInt': unknown;
    'BillingStatus': { name: 'BillingStatus'; enumValues: 'CURRENT' | 'SOURCE_REQUIRED' | 'PAST_DUE' | 'DELINQUENT' | 'TRIAL_ACTIVE' | 'TRIAL_ENDED' | 'SUSPENDED'; };
    'Boolean': unknown;
    'Build': { kind: 'OBJECT'; name: 'Build'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'commitId': { name: 'commitId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'commitUrl': { name: 'commitUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'failed': { name: 'failed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'inProgress': { name: 'inProgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'number': { name: 'number'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'succeeded': { name: 'succeeded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'BuildConnection': { kind: 'OBJECT'; name: 'BuildConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BuildEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Build'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'BuildEdge': { kind: 'OBJECT'; name: 'BuildEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Build'; ofType: null; } }; }; };
    'BuildFinalImageInput': { kind: 'INPUT_OBJECT'; name: 'BuildFinalImageInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'sizeBytes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; }; defaultValue: null }]; };
    'BuildImageOptsInput': { kind: 'INPUT_OBJECT'; name: 'BuildImageOptsInput'; isOneOf: false; inputFields: [{ name: 'dockerfilePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'imageRef'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'buildArgs'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'extraBuildArgs'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'imageLabel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'tag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'target'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noCache'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'builtIn'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'builtInSettings'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'builder'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'buildPacks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'BuildStrategyAttemptInput': { kind: 'INPUT_OBJECT'; name: 'BuildStrategyAttemptInput'; isOneOf: false; inputFields: [{ name: 'strategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'result'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'BuildTimingsInput': { kind: 'INPUT_OBJECT'; name: 'BuildTimingsInput'; isOneOf: false; inputFields: [{ name: 'buildAndPushMs'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; defaultValue: null }, { name: 'builderInitMs'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; defaultValue: null }, { name: 'buildMs'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; defaultValue: null }, { name: 'contextBuildMs'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; defaultValue: null }, { name: 'imageBuildMs'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; defaultValue: null }, { name: 'pushMs'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; defaultValue: null }]; };
    'BuilderMetaInput': { kind: 'INPUT_OBJECT'; name: 'BuilderMetaInput'; isOneOf: false; inputFields: [{ name: 'builderType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'dockerVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'buildkitEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'platform'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'remoteAppName'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'remoteMachineId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CancelBuildPayload': { kind: 'OBJECT'; name: 'CancelBuildPayload'; fields: { 'build': { name: 'build'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Build'; ofType: null; }; } }; }; };
    'CaveatSet': unknown;
    'Certificate': { kind: 'OBJECT'; name: 'Certificate'; fields: { 'expiresAt': { name: 'expiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'hostname': { name: 'hostname'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CertificateConnection': { kind: 'OBJECT'; name: 'CertificateConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CertificateEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Certificate'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CertificateEdge': { kind: 'OBJECT'; name: 'CertificateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Certificate'; ofType: null; } }; }; };
    'Check': { kind: 'OBJECT'; name: 'Check'; fields: { 'httpHeaders': { name: 'httpHeaders'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckHeader'; ofType: null; }; }; } }; 'httpMethod': { name: 'httpMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'httpPath': { name: 'httpPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'httpProtocol': { name: 'httpProtocol'; type: { kind: 'ENUM'; name: 'HTTPProtocol'; ofType: null; } }; 'httpTlsSkipVerify': { name: 'httpTlsSkipVerify'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scriptArgs': { name: 'scriptArgs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'scriptCommand': { name: 'scriptCommand'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timeout': { name: 'timeout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckType'; ofType: null; }; } }; }; };
    'CheckCertificateInput': { kind: 'INPUT_OBJECT'; name: 'CheckCertificateInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'hostname'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CheckCertificatePayload': { kind: 'OBJECT'; name: 'CheckCertificatePayload'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'certificate': { name: 'certificate'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; 'check': { name: 'check'; type: { kind: 'OBJECT'; name: 'HostnameCheck'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckDomainInput': { kind: 'INPUT_OBJECT'; name: 'CheckDomainInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CheckDomainPayload': { kind: 'OBJECT'; name: 'CheckDomainPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsAvailable': { name: 'dnsAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'domainName': { name: 'domainName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'registrationAvailable': { name: 'registrationAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'registrationPeriod': { name: 'registrationPeriod'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'registrationPrice': { name: 'registrationPrice'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'registrationSupported': { name: 'registrationSupported'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tld': { name: 'tld'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transferAvailable': { name: 'transferAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CheckHTTPResponse': { kind: 'OBJECT'; name: 'CheckHTTPResponse'; fields: { 'closeTs': { name: 'closeTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'connectedTs': { name: 'connectedTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dnsTs': { name: 'dnsTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'firstTs': { name: 'firstTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'flyioDebug': { name: 'flyioDebug'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastTs': { name: 'lastTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckLocation'; ofType: null; }; } }; 'rawHeaders': { name: 'rawHeaders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rawOutput': { name: 'rawOutput'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'resolvedIp': { name: 'resolvedIp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sentTs': { name: 'sentTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startTs': { name: 'startTs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'statusCode': { name: 'statusCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'tlsTs': { name: 'tlsTs'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckHTTPResponseConnection': { kind: 'OBJECT'; name: 'CheckHTTPResponseConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckHTTPResponseEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckHTTPResponse'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CheckHTTPResponseEdge': { kind: 'OBJECT'; name: 'CheckHTTPResponseEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CheckHTTPResponse'; ofType: null; } }; }; };
    'CheckHTTPVerb': { name: 'CheckHTTPVerb'; enumValues: 'GET' | 'HEAD'; };
    'CheckHeader': { kind: 'OBJECT'; name: 'CheckHeader'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CheckHeaderInput': { kind: 'INPUT_OBJECT'; name: 'CheckHeaderInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CheckInput': { kind: 'INPUT_OBJECT'; name: 'CheckInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckType'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'interval'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'timeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'httpMethod'; type: { kind: 'ENUM'; name: 'HTTPMethod'; ofType: null; }; defaultValue: null }, { name: 'httpPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'httpProtocol'; type: { kind: 'ENUM'; name: 'HTTPProtocol'; ofType: null; }; defaultValue: null }, { name: 'httpTlsSkipVerify'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'httpHeaders'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CheckHeaderInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'scriptCommand'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scriptArgs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'CheckJob': { kind: 'OBJECT'; name: 'CheckJob'; fields: { 'httpOptions': { name: 'httpOptions'; type: { kind: 'OBJECT'; name: 'CheckJobHTTPOptions'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckLocationConnection'; ofType: null; }; } }; 'nextRunAt': { name: 'nextRunAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'runs': { name: 'runs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJobRunConnection'; ofType: null; }; } }; 'schedule': { name: 'schedule'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CheckJobConnection': { kind: 'OBJECT'; name: 'CheckJobConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJobEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CheckJobEdge': { kind: 'OBJECT'; name: 'CheckJobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CheckJob'; ofType: null; } }; }; };
    'CheckJobHTTPOptions': { kind: 'OBJECT'; name: 'CheckJobHTTPOptions'; fields: { 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'verb': { name: 'verb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckHTTPVerb'; ofType: null; }; } }; }; };
    'CheckJobHTTPOptionsInput': { kind: 'INPUT_OBJECT'; name: 'CheckJobHTTPOptionsInput'; isOneOf: false; inputFields: [{ name: 'verb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckHTTPVerb'; ofType: null; }; }; defaultValue: "GET" }, { name: 'headers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'CheckJobRun': { kind: 'OBJECT'; name: 'CheckJobRun'; fields: { 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'httpOptions': { name: 'httpOptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJobHTTPOptions'; ofType: null; }; } }; 'httpResponses': { name: 'httpResponses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckHTTPResponseConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckLocationConnection'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tests': { name: 'tests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CheckJobRunConnection': { kind: 'OBJECT'; name: 'CheckJobRunConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJobRunEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJobRun'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CheckJobRunEdge': { kind: 'OBJECT'; name: 'CheckJobRunEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CheckJobRun'; ofType: null; } }; }; };
    'CheckLocation': { kind: 'OBJECT'; name: 'CheckLocation'; fields: { 'coordinates': { name: 'coordinates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; }; } }; 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'locality': { name: 'locality'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CheckLocationConnection': { kind: 'OBJECT'; name: 'CheckLocationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckLocationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckLocation'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CheckLocationEdge': { kind: 'OBJECT'; name: 'CheckLocationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CheckLocation'; ofType: null; } }; }; };
    'CheckState': { kind: 'OBJECT'; name: 'CheckState'; fields: { 'allocation': { name: 'allocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; }; } }; 'allocationId': { name: 'allocationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'output': { name: 'output'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'serviceName': { name: 'serviceName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'CheckStateConnection': { kind: 'OBJECT'; name: 'CheckStateConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckStateEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckState'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CheckStateEdge': { kind: 'OBJECT'; name: 'CheckStateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CheckState'; ofType: null; } }; }; };
    'CheckType': { name: 'CheckType'; enumValues: 'TCP' | 'HTTP' | 'SCRIPT'; };
    'ConfigureRegionsInput': { kind: 'INPUT_OBJECT'; name: 'ConfigureRegionsInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'allowRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'denyRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'backupRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'group'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ConfigureRegionsPayload': { kind: 'OBJECT'; name: 'ConfigureRegionsPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'backupRegions': { name: 'backupRegions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'regions': { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; }; } }; }; };
    'CreateAddOnInput': { kind: 'INPUT_OBJECT'; name: 'CreateAddOnInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AddOnType'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'planId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'organizationPlanId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'primaryRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'readRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'options'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'CreateAddOnPayload': { kind: 'OBJECT'; name: 'CreateAddOnPayload'; fields: { 'addOn': { name: 'addOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOn'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateAndRegisterDomainInput': { kind: 'INPUT_OBJECT'; name: 'CreateAndRegisterDomainInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'whoisPrivacy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'autoRenew'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CreateAndRegisterDomainPayload': { kind: 'OBJECT'; name: 'CreateAndRegisterDomainPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'CreateAndTransferDomainInput': { kind: 'INPUT_OBJECT'; name: 'CreateAndTransferDomainInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'authorizationCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateAndTransferDomainPayload': { kind: 'OBJECT'; name: 'CreateAndTransferDomainPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'CreateAppInput': { kind: 'INPUT_OBJECT'; name: 'CreateAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'runtime'; type: { kind: 'ENUM'; name: 'RuntimeType'; ofType: null; }; defaultValue: "FIRECRACKER" }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'preferredRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'heroku'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'network'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appRoleId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'machines'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'enableSubdomains'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'CreateAppPayload': { kind: 'OBJECT'; name: 'CreateAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateBuildInput': { kind: 'INPUT_OBJECT'; name: 'CreateBuildInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'machineId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'imageOpts'; type: { kind: 'INPUT_OBJECT'; name: 'BuildImageOptsInput'; ofType: null; }; defaultValue: null }, { name: 'strategiesAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'builderType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateBuildPayload': { kind: 'OBJECT'; name: 'CreateBuildPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CreateCheckJobInput': { kind: 'INPUT_OBJECT'; name: 'CreateCheckJobInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'httpOptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CheckJobHTTPOptionsInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateCheckJobPayload': { kind: 'OBJECT'; name: 'CreateCheckJobPayload'; fields: { 'checkJob': { name: 'checkJob'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJob'; ofType: null; }; } }; 'checkJobRun': { name: 'checkJobRun'; type: { kind: 'OBJECT'; name: 'CheckJobRun'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateCheckJobRunInput': { kind: 'INPUT_OBJECT'; name: 'CreateCheckJobRunInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'checkJobId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CreateCheckJobRunPayload': { kind: 'OBJECT'; name: 'CreateCheckJobRunPayload'; fields: { 'checkJob': { name: 'checkJob'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJob'; ofType: null; }; } }; 'checkJobRun': { name: 'checkJobRun'; type: { kind: 'OBJECT'; name: 'CheckJobRun'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateDNSPortalInput': { kind: 'INPUT_OBJECT'; name: 'CreateDNSPortalInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'returnUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'returnUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'supportUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'supportUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'primaryColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accentColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateDNSPortalPayload': { kind: 'OBJECT'; name: 'CreateDNSPortalPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsPortal': { name: 'dnsPortal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; }; } }; }; };
    'CreateDNSPortalSessionInput': { kind: 'INPUT_OBJECT'; name: 'CreateDNSPortalSessionInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dnsPortalId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'returnUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'returnUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateDNSPortalSessionPayload': { kind: 'OBJECT'; name: 'CreateDNSPortalSessionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsPortalSession': { name: 'dnsPortalSession'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortalSession'; ofType: null; }; } }; }; };
    'CreateDNSRecordInput': { kind: 'INPUT_OBJECT'; name: 'CreateDNSRecordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DNSRecordType'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ttl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'rdata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateDNSRecordPayload': { kind: 'OBJECT'; name: 'CreateDNSRecordPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'record': { name: 'record'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecord'; ofType: null; }; } }; }; };
    'CreateDelegatedWireGuardTokenInput': { kind: 'INPUT_OBJECT'; name: 'CreateDelegatedWireGuardTokenInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateDelegatedWireGuardTokenPayload': { kind: 'OBJECT'; name: 'CreateDelegatedWireGuardTokenPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CreateDoctorReportInput': { kind: 'INPUT_OBJECT'; name: 'CreateDoctorReportInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; defaultValue: null }]; };
    'CreateDoctorReportPayload': { kind: 'OBJECT'; name: 'CreateDoctorReportPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reportId': { name: 'reportId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'CreateDoctorUrlPayload': { kind: 'OBJECT'; name: 'CreateDoctorUrlPayload'; fields: { 'putUrl': { name: 'putUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CreateDomainInput': { kind: 'INPUT_OBJECT'; name: 'CreateDomainInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateDomainPayload': { kind: 'OBJECT'; name: 'CreateDomainPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'CreateExtensionTosAgreementInput': { kind: 'INPUT_OBJECT'; name: 'CreateExtensionTosAgreementInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnProviderName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CreateExtensionTosAgreementPayload': { kind: 'OBJECT'; name: 'CreateExtensionTosAgreementPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateLimitedAccessTokenInput': { kind: 'INPUT_OBJECT'; name: 'CreateLimitedAccessTokenInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'profile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'profileParams'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'expiry'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'optInThirdParties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'optOutThirdParties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'CreateLimitedAccessTokenPayload': { kind: 'OBJECT'; name: 'CreateLimitedAccessTokenPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'limitedAccessToken': { name: 'limitedAccessToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitedAccessToken'; ofType: null; }; } }; }; };
    'CreateOrganizationInput': { kind: 'INPUT_OBJECT'; name: 'CreateOrganizationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'appsV2DefaultOn'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CreateOrganizationInvitationInput': { kind: 'INPUT_OBJECT'; name: 'CreateOrganizationInvitationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateOrganizationInvitationPayload': { kind: 'OBJECT'; name: 'CreateOrganizationInvitationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'invitation': { name: 'invitation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationInvitation'; ofType: null; }; } }; }; };
    'CreateOrganizationPayload': { kind: 'OBJECT'; name: 'CreateOrganizationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CreatePostgresClusterDatabaseInput': { kind: 'INPUT_OBJECT'; name: 'CreatePostgresClusterDatabaseInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'databaseName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreatePostgresClusterDatabasePayload': { kind: 'OBJECT'; name: 'CreatePostgresClusterDatabasePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'database': { name: 'database'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterDatabase'; ofType: null; }; } }; 'postgresClusterRole': { name: 'postgresClusterRole'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAppRole'; ofType: null; }; } }; }; };
    'CreatePostgresClusterUserInput': { kind: 'INPUT_OBJECT'; name: 'CreatePostgresClusterUserInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'superuser'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CreatePostgresClusterUserPayload': { kind: 'OBJECT'; name: 'CreatePostgresClusterUserPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'postgresClusterRole': { name: 'postgresClusterRole'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAppRole'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterUser'; ofType: null; }; } }; }; };
    'CreateReleaseInput': { kind: 'INPUT_OBJECT'; name: 'CreateReleaseInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'platformVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'definition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; defaultValue: null }, { name: 'strategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeploymentStrategy'; ofType: null; }; }; defaultValue: null }, { name: 'buildId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CreateReleasePayload': { kind: 'OBJECT'; name: 'CreateReleasePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'CreateTemplateDeploymentInput': { kind: 'INPUT_OBJECT'; name: 'CreateTemplateDeploymentInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'template'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'CreateTemplateDeploymentPayload': { kind: 'OBJECT'; name: 'CreateTemplateDeploymentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'templateDeployment': { name: 'templateDeployment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TemplateDeployment'; ofType: null; }; } }; }; };
    'CreateThirdPartyConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'CreateThirdPartyConfigurationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'caveats'; type: { kind: 'SCALAR'; name: 'CaveatSet'; ofType: null; }; defaultValue: null }, { name: 'flyctlLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; }; defaultValue: null }, { name: 'uiexLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; }; defaultValue: null }, { name: 'customLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; }; defaultValue: null }]; };
    'CreateThirdPartyConfigurationPayload': { kind: 'OBJECT'; name: 'CreateThirdPartyConfigurationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thirdPartyConfiguration': { name: 'thirdPartyConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ThirdPartyConfiguration'; ofType: null; }; } }; }; };
    'CreateVolumeInput': { kind: 'INPUT_OBJECT'; name: 'CreateVolumeInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'sizeGb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'encrypted'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'requireUniqueZone'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'snapshotId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'fsType'; type: { kind: 'ENUM'; name: 'FsTypeType'; ofType: null; }; defaultValue: "ext4" }]; };
    'CreateVolumePayload': { kind: 'OBJECT'; name: 'CreateVolumePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'volume': { name: 'volume'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; }; };
    'CreateVolumeSnapshotInput': { kind: 'INPUT_OBJECT'; name: 'CreateVolumeSnapshotInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'volumeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CreateVolumeSnapshotPayload': { kind: 'OBJECT'; name: 'CreateVolumeSnapshotPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'volume': { name: 'volume'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; }; };
    'DNSPortal': { kind: 'OBJECT'; name: 'DNSPortal'; fields: { 'accentColor': { name: 'accentColor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'primaryColor': { name: 'primaryColor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'returnUrl': { name: 'returnUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'returnUrlText': { name: 'returnUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'supportUrl': { name: 'supportUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'supportUrlText': { name: 'supportUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'DNSPortalConnection': { kind: 'OBJECT'; name: 'DNSPortalConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortalEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DNSPortalEdge': { kind: 'OBJECT'; name: 'DNSPortalEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; } }; }; };
    'DNSPortalSession': { kind: 'OBJECT'; name: 'DNSPortalSession'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'dnsPortal': { name: 'dnsPortal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; }; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isExpired': { name: 'isExpired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'returnUrl': { name: 'returnUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'returnUrlText': { name: 'returnUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DNSRecord': { kind: 'OBJECT'; name: 'DNSRecord'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'fqdn': { name: 'fqdn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isApex': { name: 'isApex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isSystem': { name: 'isSystem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isWildcard': { name: 'isWildcard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rdata': { name: 'rdata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ttl': { name: 'ttl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DNSRecordType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'DNSRecordAttributes': { kind: 'OBJECT'; name: 'DNSRecordAttributes'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rdata': { name: 'rdata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ttl': { name: 'ttl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DNSRecordType'; ofType: null; }; } }; }; };
    'DNSRecordChangeAction': { name: 'DNSRecordChangeAction'; enumValues: 'CREATE' | 'UPDATE' | 'DELETE'; };
    'DNSRecordChangeInput': { kind: 'INPUT_OBJECT'; name: 'DNSRecordChangeInput'; isOneOf: false; inputFields: [{ name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DNSRecordChangeAction'; ofType: null; }; }; defaultValue: null }, { name: 'recordId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'DNSRecordType'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ttl'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'rdata'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DNSRecordConnection': { kind: 'OBJECT'; name: 'DNSRecordConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecord'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DNSRecordDiff': { kind: 'OBJECT'; name: 'DNSRecordDiff'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DNSRecordChangeAction'; ofType: null; }; } }; 'newAttributes': { name: 'newAttributes'; type: { kind: 'OBJECT'; name: 'DNSRecordAttributes'; ofType: null; } }; 'newText': { name: 'newText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'oldAttributes': { name: 'oldAttributes'; type: { kind: 'OBJECT'; name: 'DNSRecordAttributes'; ofType: null; } }; 'oldText': { name: 'oldText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DNSRecordEdge': { kind: 'OBJECT'; name: 'DNSRecordEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DNSRecord'; ofType: null; } }; }; };
    'DNSRecordType': { name: 'DNSRecordType'; enumValues: 'A' | 'AAAA' | 'ALIAS' | 'CNAME' | 'MX' | 'NS' | 'SOA' | 'TXT' | 'SRV'; };
    'DNSRecordWarning': { kind: 'OBJECT'; name: 'DNSRecordWarning'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DNSRecordChangeAction'; ofType: null; }; } }; 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordAttributes'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'record': { name: 'record'; type: { kind: 'OBJECT'; name: 'DNSRecord'; ofType: null; } }; }; };
    'DelegatedWireGuardToken': { kind: 'OBJECT'; name: 'DelegatedWireGuardToken'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DelegatedWireGuardTokenConnection': { kind: 'OBJECT'; name: 'DelegatedWireGuardTokenConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DelegatedWireGuardTokenEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DelegatedWireGuardToken'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DelegatedWireGuardTokenEdge': { kind: 'OBJECT'; name: 'DelegatedWireGuardTokenEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DelegatedWireGuardToken'; ofType: null; } }; }; };
    'DeleteAddOnInput': { kind: 'INPUT_OBJECT'; name: 'DeleteAddOnInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DeleteAddOnPayload': { kind: 'OBJECT'; name: 'DeleteAddOnPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedAddOnName': { name: 'deletedAddOnName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeleteAppPayload': { kind: 'OBJECT'; name: 'DeleteAppPayload'; fields: { 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'DeleteCertificatePayload': { kind: 'OBJECT'; name: 'DeleteCertificatePayload'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'certificate': { name: 'certificate'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'DeleteDNSPortalInput': { kind: 'INPUT_OBJECT'; name: 'DeleteDNSPortalInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dnsPortalId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteDNSPortalPayload': { kind: 'OBJECT'; name: 'DeleteDNSPortalPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'DeleteDNSPortalSessionInput': { kind: 'INPUT_OBJECT'; name: 'DeleteDNSPortalSessionInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dnsPortalSessionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteDNSPortalSessionPayload': { kind: 'OBJECT'; name: 'DeleteDNSPortalSessionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsPortal': { name: 'dnsPortal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; }; } }; }; };
    'DeleteDNSRecordInput': { kind: 'INPUT_OBJECT'; name: 'DeleteDNSRecordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'recordId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteDNSRecordPayload': { kind: 'OBJECT'; name: 'DeleteDNSRecordPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; }; };
    'DeleteDelegatedWireGuardTokenInput': { kind: 'INPUT_OBJECT'; name: 'DeleteDelegatedWireGuardTokenInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DeleteDelegatedWireGuardTokenPayload': { kind: 'OBJECT'; name: 'DeleteDelegatedWireGuardTokenPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeleteDeploymentSourceInput': { kind: 'INPUT_OBJECT'; name: 'DeleteDeploymentSourceInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteDeploymentSourcePayload': { kind: 'OBJECT'; name: 'DeleteDeploymentSourcePayload'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeleteDomainInput': { kind: 'INPUT_OBJECT'; name: 'DeleteDomainInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteDomainPayload': { kind: 'OBJECT'; name: 'DeleteDomainPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'DeleteHealthCheckHandlerInput': { kind: 'INPUT_OBJECT'; name: 'DeleteHealthCheckHandlerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteHealthCheckHandlerPayload': { kind: 'OBJECT'; name: 'DeleteHealthCheckHandlerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeleteLimitedAccessTokenInput': { kind: 'INPUT_OBJECT'; name: 'DeleteLimitedAccessTokenInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'revokedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DeleteLimitedAccessTokenPayload': { kind: 'OBJECT'; name: 'DeleteLimitedAccessTokenPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revokedBy': { name: 'revokedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeleteOrganizationInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOrganizationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteOrganizationInvitationInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOrganizationInvitationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'invitationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteOrganizationInvitationPayload': { kind: 'OBJECT'; name: 'DeleteOrganizationInvitationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'DeleteOrganizationMembershipInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOrganizationMembershipInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteOrganizationMembershipPayload': { kind: 'OBJECT'; name: 'DeleteOrganizationMembershipPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'DeleteOrganizationPayload': { kind: 'OBJECT'; name: 'DeleteOrganizationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedOrganizationId': { name: 'deletedOrganizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'DeleteRemoteBuilderInput': { kind: 'INPUT_OBJECT'; name: 'DeleteRemoteBuilderInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteRemoteBuilderPayload': { kind: 'OBJECT'; name: 'DeleteRemoteBuilderPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'DeleteThirdPartyConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'DeleteThirdPartyConfigurationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thirdPartyConfigurationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteThirdPartyConfigurationPayload': { kind: 'OBJECT'; name: 'DeleteThirdPartyConfigurationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DeleteVolumeInput': { kind: 'INPUT_OBJECT'; name: 'DeleteVolumeInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'volumeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'lockId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'DeleteVolumePayload': { kind: 'OBJECT'; name: 'DeleteVolumePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeployImageInput': { kind: 'INPUT_OBJECT'; name: 'DeployImageInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'services'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ServiceInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'definition'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'strategy'; type: { kind: 'ENUM'; name: 'DeploymentStrategy'; ofType: null; }; defaultValue: null }]; };
    'DeployImagePayload': { kind: 'OBJECT'; name: 'DeployImagePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; 'releaseCommand': { name: 'releaseCommand'; type: { kind: 'OBJECT'; name: 'ReleaseCommand'; ofType: null; } }; }; };
    'DeploymentSource': { kind: 'OBJECT'; name: 'DeploymentSource'; fields: { 'backend': { name: 'backend'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'baseDir': { name: 'baseDir'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'connected': { name: 'connected'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'provider': { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ref': { name: 'ref'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repositoryId': { name: 'repositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repositoryUrl': { name: 'repositoryUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeploymentStatus': { kind: 'OBJECT'; name: 'DeploymentStatus'; fields: { 'allocations': { name: 'allocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'desiredCount': { name: 'desiredCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'healthyCount': { name: 'healthyCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inProgress': { name: 'inProgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'placedCount': { name: 'placedCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'promoted': { name: 'promoted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'successful': { name: 'successful'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'unhealthyCount': { name: 'unhealthyCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DeploymentStrategy': { name: 'DeploymentStrategy'; enumValues: 'IMMEDIATE' | 'SIMPLE' | 'ROLLING' | 'ROLLING_ONE' | 'CANARY' | 'BLUEGREEN'; };
    'DetachPostgresClusterInput': { kind: 'INPUT_OBJECT'; name: 'DetachPostgresClusterInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'postgresClusterAppId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'postgresClusterAttachmentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'DetachPostgresClusterPayload': { kind: 'OBJECT'; name: 'DetachPostgresClusterPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'postgresClusterApp': { name: 'postgresClusterApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; }; };
    'Domain': { kind: 'OBJECT'; name: 'Domain'; fields: { 'autoRenew': { name: 'autoRenew'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'delegatedNameservers': { name: 'delegatedNameservers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'dnsRecords': { name: 'dnsRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordConnection'; ofType: null; }; } }; 'dnsStatus': { name: 'dnsStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DomainDNSStatus'; ofType: null; }; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'registrationStatus': { name: 'registrationStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DomainRegistrationStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'zoneNameservers': { name: 'zoneNameservers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DomainConnection': { kind: 'OBJECT'; name: 'DomainConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DomainEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DomainDNSStatus': { name: 'DomainDNSStatus'; enumValues: 'PENDING' | 'UPDATING' | 'READY'; };
    'DomainEdge': { kind: 'OBJECT'; name: 'DomainEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Domain'; ofType: null; } }; }; };
    'DomainRegistrationStatus': { name: 'DomainRegistrationStatus'; enumValues: 'UNMANAGED' | 'REGISTERING' | 'REGISTERED' | 'TRANSFERRING' | 'EXPIRED'; };
    'DummyWireGuardPeerInput': { kind: 'INPUT_OBJECT'; name: 'DummyWireGuardPeerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DummyWireGuardPeerPayload': { kind: 'OBJECT'; name: 'DummyWireGuardPeerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endpointip': { name: 'endpointip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'localpub': { name: 'localpub'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'peerip': { name: 'peerip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privkey': { name: 'privkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pubkey': { name: 'pubkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EgressIPAddress': { kind: 'OBJECT'; name: 'EgressIPAddress'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ip': { name: 'ip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'EgressIPAddressConnection': { kind: 'OBJECT'; name: 'EgressIPAddressConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EgressIPAddressEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EgressIPAddress'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'EgressIPAddressEdge': { kind: 'OBJECT'; name: 'EgressIPAddressEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'EgressIPAddress'; ofType: null; } }; }; };
    'EmptyAppRole': { kind: 'OBJECT'; name: 'EmptyAppRole'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EnablePostgresConsulInput': { kind: 'INPUT_OBJECT'; name: 'EnablePostgresConsulInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EnablePostgresConsulPayload': { kind: 'OBJECT'; name: 'EnablePostgresConsulPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'consulUrl': { name: 'consulUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EnsureDepotRemoteBuilderInput': { kind: 'INPUT_OBJECT'; name: 'EnsureDepotRemoteBuilderInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'builderScope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EnsureDepotRemoteBuilderPayload': { kind: 'OBJECT'; name: 'EnsureDepotRemoteBuilderPayload'; fields: { 'buildId': { name: 'buildId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'buildToken': { name: 'buildToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EnsureMachineRemoteBuilderInput': { kind: 'INPUT_OBJECT'; name: 'EnsureMachineRemoteBuilderInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'v2'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EnsureMachineRemoteBuilderPayload': { kind: 'OBJECT'; name: 'EnsureMachineRemoteBuilderPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; }; };
    'EstablishSSHKeyInput': { kind: 'INPUT_OBJECT'; name: 'EstablishSSHKeyInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'override'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EstablishSSHKeyPayload': { kind: 'OBJECT'; name: 'EstablishSSHKeyPayload'; fields: { 'certificate': { name: 'certificate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExportDNSZoneInput': { kind: 'INPUT_OBJECT'; name: 'ExportDNSZoneInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ExportDNSZonePayload': { kind: 'OBJECT'; name: 'ExportDNSZonePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contents': { name: 'contents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; }; };
    'ExtendVolumeInput': { kind: 'INPUT_OBJECT'; name: 'ExtendVolumeInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'volumeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sizeGb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ExtendVolumePayload': { kind: 'OBJECT'; name: 'ExtendVolumePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'needsRestart': { name: 'needsRestart'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'volume': { name: 'volume'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; }; };
    'FinishBuildInput': { kind: 'INPUT_OBJECT'; name: 'FinishBuildInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'buildId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'machineId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'strategiesAttempted'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BuildStrategyAttemptInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'builderMeta'; type: { kind: 'INPUT_OBJECT'; name: 'BuilderMetaInput'; ofType: null; }; defaultValue: null }, { name: 'finalImage'; type: { kind: 'INPUT_OBJECT'; name: 'BuildFinalImageInput'; ofType: null; }; defaultValue: null }, { name: 'timings'; type: { kind: 'INPUT_OBJECT'; name: 'BuildTimingsInput'; ofType: null; }; defaultValue: null }, { name: 'logs'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'FinishBuildPayload': { kind: 'OBJECT'; name: 'FinishBuildPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'wallclockTimeMs': { name: 'wallclockTimeMs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'Float': unknown;
    'FlyPlatform': { kind: 'OBJECT'; name: 'FlyPlatform'; fields: { 'flyctl': { name: 'flyctl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FlyctlRelease'; ofType: null; }; } }; 'regions': { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; }; }; } }; 'requestRegion': { name: 'requestRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vmSizes': { name: 'vmSizes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VMSize'; ofType: null; }; }; }; } }; }; };
    'FlyctlMachineHostAppRole': { kind: 'OBJECT'; name: 'FlyctlMachineHostAppRole'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FlyctlRelease': { kind: 'OBJECT'; name: 'FlyctlRelease'; fields: { 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ForkVolumeInput': { kind: 'INPUT_OBJECT'; name: 'ForkVolumeInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sourceVolId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'machinesOnly'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lockId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'remote'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ForkVolumePayload': { kind: 'OBJECT'; name: 'ForkVolumePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'volume': { name: 'volume'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; }; };
    'FsTypeType': { name: 'FsTypeType'; enumValues: 'ext4' | 'raw'; };
    'GithubAppInstallation': { kind: 'OBJECT'; name: 'GithubAppInstallation'; fields: { 'editUrl': { name: 'editUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'owner': { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repositories': { name: 'repositories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GithubRepository'; ofType: null; }; }; }; } }; }; };
    'GithubIntegration': { kind: 'OBJECT'; name: 'GithubIntegration'; fields: { 'installationUrl': { name: 'installationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'installations': { name: 'installations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GithubAppInstallation'; ofType: null; }; }; }; } }; 'viewerAuthenticated': { name: 'viewerAuthenticated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'GithubRepository': { kind: 'OBJECT'; name: 'GithubRepository'; fields: { 'fork': { name: 'fork'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fullName': { name: 'fullName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'private': { name: 'private'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'GrantPostgresClusterUserAccessInput': { kind: 'INPUT_OBJECT'; name: 'GrantPostgresClusterUserAccessInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'databaseName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GrantPostgresClusterUserAccessPayload': { kind: 'OBJECT'; name: 'GrantPostgresClusterUserAccessPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'database': { name: 'database'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterDatabase'; ofType: null; }; } }; 'postgresClusterRole': { name: 'postgresClusterRole'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAppRole'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterUser'; ofType: null; }; } }; }; };
    'HTTPMethod': { name: 'HTTPMethod'; enumValues: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'HEAD' | 'DELETE'; };
    'HTTPProtocol': { name: 'HTTPProtocol'; enumValues: 'HTTP' | 'HTTPS'; };
    'HealthCheck': { kind: 'OBJECT'; name: 'HealthCheck'; fields: { 'entity': { name: 'entity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'lastPassing': { name: 'lastPassing'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'output': { name: 'output'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'HealthCheckConnection': { kind: 'OBJECT'; name: 'HealthCheckConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheck'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'HealthCheckEdge': { kind: 'OBJECT'; name: 'HealthCheckEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'HealthCheck'; ofType: null; } }; }; };
    'HealthCheckHandler': { kind: 'OBJECT'; name: 'HealthCheckHandler'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'HealthCheckHandlerConnection': { kind: 'OBJECT'; name: 'HealthCheckHandlerConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckHandlerEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckHandler'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'HealthCheckHandlerEdge': { kind: 'OBJECT'; name: 'HealthCheckHandlerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'HealthCheckHandler'; ofType: null; } }; }; };
    'HerokuApp': { kind: 'OBJECT'; name: 'HerokuApp'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'releasedAt': { name: 'releasedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'stack': { name: 'stack'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'teamName': { name: 'teamName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'HerokuIntegration': { kind: 'OBJECT'; name: 'HerokuIntegration'; fields: { 'herokuApps': { name: 'herokuApps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'HerokuApp'; ofType: null; }; }; }; } }; 'viewerAuthenticated': { name: 'viewerAuthenticated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Host': { kind: 'OBJECT'; name: 'Host'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'HostnameCheck': { kind: 'OBJECT'; name: 'HostnameCheck'; fields: { 'aRecords': { name: 'aRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'aaaaRecords': { name: 'aaaaRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'acmeDnsConfigured': { name: 'acmeDnsConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'caaRecords': { name: 'caaRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'cnameRecords': { name: 'cnameRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'dnsConfigured': { name: 'dnsConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'dnsProvider': { name: 'dnsProvider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsVerificationRecord': { name: 'dnsVerificationRecord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isProxied': { name: 'isProxied'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolvedAddresses': { name: 'resolvedAddresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'soa': { name: 'soa'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ID': unknown;
    'IPAddress': { kind: 'OBJECT'; name: 'IPAddress'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'network': { name: 'network'; type: { kind: 'OBJECT'; name: 'Network'; ofType: null; } }; 'region': { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'serviceName': { name: 'serviceName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IPAddressType'; ofType: null; }; } }; }; };
    'IPAddressConnection': { kind: 'OBJECT'; name: 'IPAddressConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IPAddressEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IPAddress'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'IPAddressEdge': { kind: 'OBJECT'; name: 'IPAddressEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'IPAddress'; ofType: null; } }; }; };
    'IPAddressType': { name: 'IPAddressType'; enumValues: 'v4' | 'v6' | 'private_v6' | 'shared_v4'; };
    'ISO8601DateTime': unknown;
    'Image': { kind: 'OBJECT'; name: 'Image'; fields: { 'absoluteRef': { name: 'absoluteRef'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'compressedSize': { name: 'compressedSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'compressedSizeFull': { name: 'compressedSizeFull'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'config': { name: 'config'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'configDigest': { name: 'configDigest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'manifest': { name: 'manifest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'ref': { name: 'ref'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'registry': { name: 'registry'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repository': { name: 'repository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tag': { name: 'tag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ImageVersion': { kind: 'OBJECT'; name: 'ImageVersion'; fields: { 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'registry': { name: 'registry'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repository': { name: 'repository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tag': { name: 'tag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ImportCertificatePayload': { kind: 'OBJECT'; name: 'ImportCertificatePayload'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appCertificate': { name: 'appCertificate'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; 'certificate': { name: 'certificate'; type: { kind: 'OBJECT'; name: 'Certificate'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'ImportDNSZoneInput': { kind: 'INPUT_OBJECT'; name: 'ImportDNSZoneInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'zonefile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ImportDNSZonePayload': { kind: 'OBJECT'; name: 'ImportDNSZonePayload'; fields: { 'changes': { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordDiff'; ofType: null; }; }; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordWarning'; ofType: null; }; }; }; } }; }; };
    'Int': unknown;
    'Issue': { kind: 'OBJECT'; name: 'Issue'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internalId': { name: 'internalId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'resolvedAt': { name: 'resolvedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'IssueCertificateInput': { kind: 'INPUT_OBJECT'; name: 'IssueCertificateInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'appNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'validHours'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'principals'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'publicKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'IssueCertificatePayload': { kind: 'OBJECT'; name: 'IssueCertificatePayload'; fields: { 'certificate': { name: 'certificate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'IssueConnection': { kind: 'OBJECT'; name: 'IssueConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IssueEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'IssueEdge': { kind: 'OBJECT'; name: 'IssueEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'JSON': unknown;
    'KillMachineInput': { kind: 'INPUT_OBJECT'; name: 'KillMachineInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'KillMachinePayload': { kind: 'OBJECT'; name: 'KillMachinePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; }; };
    'LaunchMachineInput': { kind: 'INPUT_OBJECT'; name: 'LaunchMachineInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'config'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; defaultValue: null }]; };
    'LaunchMachinePayload': { kind: 'OBJECT'; name: 'LaunchMachinePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; }; };
    'LimitedAccessToken': { kind: 'OBJECT'; name: 'LimitedAccessToken'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'profile': { name: 'profile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revokedAt': { name: 'revokedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'revokedBy': { name: 'revokedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tokenHeader': { name: 'tokenHeader'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'LimitedAccessTokenConnection': { kind: 'OBJECT'; name: 'LimitedAccessTokenConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitedAccessTokenEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitedAccessToken'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'LimitedAccessTokenEdge': { kind: 'OBJECT'; name: 'LimitedAccessTokenEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'LimitedAccessToken'; ofType: null; } }; }; };
    'LockAppInput': { kind: 'INPUT_OBJECT'; name: 'LockAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'LockAppPayload': { kind: 'OBJECT'; name: 'LockAppPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expiration': { name: 'expiration'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'lockId': { name: 'lockId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'LogEntry': { kind: 'OBJECT'; name: 'LogEntry'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'instanceId': { name: 'instanceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'LogOutInput': { kind: 'INPUT_OBJECT'; name: 'LogOutInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'LogOutPayload': { kind: 'OBJECT'; name: 'LogOutPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'LoggedCertificate': { kind: 'OBJECT'; name: 'LoggedCertificate'; fields: { 'cert': { name: 'cert'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'root': { name: 'root'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'LoggedCertificateConnection': { kind: 'OBJECT'; name: 'LoggedCertificateConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LoggedCertificateEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LoggedCertificate'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'LoggedCertificateEdge': { kind: 'OBJECT'; name: 'LoggedCertificateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'LoggedCertificate'; ofType: null; } }; }; };
    'Macaroon': { kind: 'OBJECT'; name: 'Macaroon'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'featureFlags': { name: 'featureFlags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'hasNodeproxyApps': { name: 'hasNodeproxyApps'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'lastRegion': { name: 'lastRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'personalOrganization': { name: 'personalOrganization'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; 'trust': { name: 'trust'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationTrust'; ofType: null; }; } }; 'twoFactorProtection': { name: 'twoFactorProtection'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Machine': { kind: 'OBJECT'; name: 'Machine'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'config': { name: 'config'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'egressIpAddresses': { name: 'egressIpAddresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EgressIPAddressConnection'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineEventConnection'; ofType: null; }; } }; 'host': { name: 'host'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Host'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'instanceId': { name: 'instanceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ips': { name: 'ips'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineIPConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'MachineConnection': { kind: 'OBJECT'; name: 'MachineConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MachineEdge': { kind: 'OBJECT'; name: 'MachineEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Machine'; ofType: null; } }; }; };
    'MachineEvent': { kind: 'INTERFACE'; name: 'MachineEvent'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; possibleTypes: 'MachineEventDestroy' | 'MachineEventExit' | 'MachineEventGeneric' | 'MachineEventStart'; };
    'MachineEventConnection': { kind: 'OBJECT'; name: 'MachineEventConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineEventEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'MachineEvent'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MachineEventDestroy': { kind: 'OBJECT'; name: 'MachineEventDestroy'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'MachineEventEdge': { kind: 'OBJECT'; name: 'MachineEventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'MachineEvent'; ofType: null; } }; }; };
    'MachineEventExit': { kind: 'OBJECT'; name: 'MachineEventExit'; fields: { 'exitCode': { name: 'exitCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'oomKilled': { name: 'oomKilled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'requestedStop': { name: 'requestedStop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'MachineEventGeneric': { kind: 'OBJECT'; name: 'MachineEventGeneric'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'MachineEventStart': { kind: 'OBJECT'; name: 'MachineEventStart'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'MachineIP': { kind: 'OBJECT'; name: 'MachineIP'; fields: { 'family': { name: 'family'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ip': { name: 'ip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maskSize': { name: 'maskSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MachineIPConnection': { kind: 'OBJECT'; name: 'MachineIPConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineIPEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineIP'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MachineIPEdge': { kind: 'OBJECT'; name: 'MachineIPEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MachineIP'; ofType: null; } }; }; };
    'MoveAppInput': { kind: 'INPUT_OBJECT'; name: 'MoveAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'MoveAppPayload': { kind: 'OBJECT'; name: 'MoveAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Mutations': { kind: 'OBJECT'; name: 'Mutations'; fields: { 'addCertificate': { name: 'addCertificate'; type: { kind: 'OBJECT'; name: 'AddCertificatePayload'; ofType: null; } }; 'addWireGuardPeer': { name: 'addWireGuardPeer'; type: { kind: 'OBJECT'; name: 'AddWireGuardPeerPayload'; ofType: null; } }; 'allocateEgressIpAddress': { name: 'allocateEgressIpAddress'; type: { kind: 'OBJECT'; name: 'AllocateEgressIPAddressPayload'; ofType: null; } }; 'allocateIpAddress': { name: 'allocateIpAddress'; type: { kind: 'OBJECT'; name: 'AllocateIPAddressPayload'; ofType: null; } }; 'attachPostgresCluster': { name: 'attachPostgresCluster'; type: { kind: 'OBJECT'; name: 'AttachPostgresClusterPayload'; ofType: null; } }; 'cancelBuild': { name: 'cancelBuild'; type: { kind: 'OBJECT'; name: 'CancelBuildPayload'; ofType: null; } }; 'checkCertificate': { name: 'checkCertificate'; type: { kind: 'OBJECT'; name: 'CheckCertificatePayload'; ofType: null; } }; 'checkDomain': { name: 'checkDomain'; type: { kind: 'OBJECT'; name: 'CheckDomainPayload'; ofType: null; } }; 'configureRegions': { name: 'configureRegions'; type: { kind: 'OBJECT'; name: 'ConfigureRegionsPayload'; ofType: null; } }; 'createAddOn': { name: 'createAddOn'; type: { kind: 'OBJECT'; name: 'CreateAddOnPayload'; ofType: null; } }; 'createAndRegisterDomain': { name: 'createAndRegisterDomain'; type: { kind: 'OBJECT'; name: 'CreateAndRegisterDomainPayload'; ofType: null; } }; 'createAndTransferDomain': { name: 'createAndTransferDomain'; type: { kind: 'OBJECT'; name: 'CreateAndTransferDomainPayload'; ofType: null; } }; 'createApp': { name: 'createApp'; type: { kind: 'OBJECT'; name: 'CreateAppPayload'; ofType: null; } }; 'createBuild': { name: 'createBuild'; type: { kind: 'OBJECT'; name: 'CreateBuildPayload'; ofType: null; } }; 'createCheckJob': { name: 'createCheckJob'; type: { kind: 'OBJECT'; name: 'CreateCheckJobPayload'; ofType: null; } }; 'createCheckJobRun': { name: 'createCheckJobRun'; type: { kind: 'OBJECT'; name: 'CreateCheckJobRunPayload'; ofType: null; } }; 'createDelegatedWireGuardToken': { name: 'createDelegatedWireGuardToken'; type: { kind: 'OBJECT'; name: 'CreateDelegatedWireGuardTokenPayload'; ofType: null; } }; 'createDnsPortal': { name: 'createDnsPortal'; type: { kind: 'OBJECT'; name: 'CreateDNSPortalPayload'; ofType: null; } }; 'createDnsPortalSession': { name: 'createDnsPortalSession'; type: { kind: 'OBJECT'; name: 'CreateDNSPortalSessionPayload'; ofType: null; } }; 'createDnsRecord': { name: 'createDnsRecord'; type: { kind: 'OBJECT'; name: 'CreateDNSRecordPayload'; ofType: null; } }; 'createDoctorReport': { name: 'createDoctorReport'; type: { kind: 'OBJECT'; name: 'CreateDoctorReportPayload'; ofType: null; } }; 'createDoctorUrl': { name: 'createDoctorUrl'; type: { kind: 'OBJECT'; name: 'CreateDoctorUrlPayload'; ofType: null; } }; 'createDomain': { name: 'createDomain'; type: { kind: 'OBJECT'; name: 'CreateDomainPayload'; ofType: null; } }; 'createExtensionTosAgreement': { name: 'createExtensionTosAgreement'; type: { kind: 'OBJECT'; name: 'CreateExtensionTosAgreementPayload'; ofType: null; } }; 'createLimitedAccessToken': { name: 'createLimitedAccessToken'; type: { kind: 'OBJECT'; name: 'CreateLimitedAccessTokenPayload'; ofType: null; } }; 'createOrganization': { name: 'createOrganization'; type: { kind: 'OBJECT'; name: 'CreateOrganizationPayload'; ofType: null; } }; 'createOrganizationInvitation': { name: 'createOrganizationInvitation'; type: { kind: 'OBJECT'; name: 'CreateOrganizationInvitationPayload'; ofType: null; } }; 'createPostgresClusterDatabase': { name: 'createPostgresClusterDatabase'; type: { kind: 'OBJECT'; name: 'CreatePostgresClusterDatabasePayload'; ofType: null; } }; 'createPostgresClusterUser': { name: 'createPostgresClusterUser'; type: { kind: 'OBJECT'; name: 'CreatePostgresClusterUserPayload'; ofType: null; } }; 'createRelease': { name: 'createRelease'; type: { kind: 'OBJECT'; name: 'CreateReleasePayload'; ofType: null; } }; 'createTemplateDeployment': { name: 'createTemplateDeployment'; type: { kind: 'OBJECT'; name: 'CreateTemplateDeploymentPayload'; ofType: null; } }; 'createThirdPartyConfiguration': { name: 'createThirdPartyConfiguration'; type: { kind: 'OBJECT'; name: 'CreateThirdPartyConfigurationPayload'; ofType: null; } }; 'createVolume': { name: 'createVolume'; type: { kind: 'OBJECT'; name: 'CreateVolumePayload'; ofType: null; } }; 'createVolumeSnapshot': { name: 'createVolumeSnapshot'; type: { kind: 'OBJECT'; name: 'CreateVolumeSnapshotPayload'; ofType: null; } }; 'deleteAddOn': { name: 'deleteAddOn'; type: { kind: 'OBJECT'; name: 'DeleteAddOnPayload'; ofType: null; } }; 'deleteApp': { name: 'deleteApp'; type: { kind: 'OBJECT'; name: 'DeleteAppPayload'; ofType: null; } }; 'deleteCertificate': { name: 'deleteCertificate'; type: { kind: 'OBJECT'; name: 'DeleteCertificatePayload'; ofType: null; } }; 'deleteDelegatedWireGuardToken': { name: 'deleteDelegatedWireGuardToken'; type: { kind: 'OBJECT'; name: 'DeleteDelegatedWireGuardTokenPayload'; ofType: null; } }; 'deleteDeploymentSource': { name: 'deleteDeploymentSource'; type: { kind: 'OBJECT'; name: 'DeleteDeploymentSourcePayload'; ofType: null; } }; 'deleteDnsPortal': { name: 'deleteDnsPortal'; type: { kind: 'OBJECT'; name: 'DeleteDNSPortalPayload'; ofType: null; } }; 'deleteDnsPortalSession': { name: 'deleteDnsPortalSession'; type: { kind: 'OBJECT'; name: 'DeleteDNSPortalSessionPayload'; ofType: null; } }; 'deleteDnsRecord': { name: 'deleteDnsRecord'; type: { kind: 'OBJECT'; name: 'DeleteDNSRecordPayload'; ofType: null; } }; 'deleteDomain': { name: 'deleteDomain'; type: { kind: 'OBJECT'; name: 'DeleteDomainPayload'; ofType: null; } }; 'deleteHealthCheckHandler': { name: 'deleteHealthCheckHandler'; type: { kind: 'OBJECT'; name: 'DeleteHealthCheckHandlerPayload'; ofType: null; } }; 'deleteLimitedAccessToken': { name: 'deleteLimitedAccessToken'; type: { kind: 'OBJECT'; name: 'DeleteLimitedAccessTokenPayload'; ofType: null; } }; 'deleteOrganization': { name: 'deleteOrganization'; type: { kind: 'OBJECT'; name: 'DeleteOrganizationPayload'; ofType: null; } }; 'deleteOrganizationInvitation': { name: 'deleteOrganizationInvitation'; type: { kind: 'OBJECT'; name: 'DeleteOrganizationInvitationPayload'; ofType: null; } }; 'deleteOrganizationMembership': { name: 'deleteOrganizationMembership'; type: { kind: 'OBJECT'; name: 'DeleteOrganizationMembershipPayload'; ofType: null; } }; 'deleteRemoteBuilder': { name: 'deleteRemoteBuilder'; type: { kind: 'OBJECT'; name: 'DeleteRemoteBuilderPayload'; ofType: null; } }; 'deleteThirdPartyConfiguration': { name: 'deleteThirdPartyConfiguration'; type: { kind: 'OBJECT'; name: 'DeleteThirdPartyConfigurationPayload'; ofType: null; } }; 'deleteVolume': { name: 'deleteVolume'; type: { kind: 'OBJECT'; name: 'DeleteVolumePayload'; ofType: null; } }; 'deployImage': { name: 'deployImage'; type: { kind: 'OBJECT'; name: 'DeployImagePayload'; ofType: null; } }; 'detachPostgresCluster': { name: 'detachPostgresCluster'; type: { kind: 'OBJECT'; name: 'DetachPostgresClusterPayload'; ofType: null; } }; 'dummyWireGuardPeer': { name: 'dummyWireGuardPeer'; type: { kind: 'OBJECT'; name: 'DummyWireGuardPeerPayload'; ofType: null; } }; 'enablePostgresConsul': { name: 'enablePostgresConsul'; type: { kind: 'OBJECT'; name: 'EnablePostgresConsulPayload'; ofType: null; } }; 'ensureDepotRemoteBuilder': { name: 'ensureDepotRemoteBuilder'; type: { kind: 'OBJECT'; name: 'EnsureDepotRemoteBuilderPayload'; ofType: null; } }; 'ensureMachineRemoteBuilder': { name: 'ensureMachineRemoteBuilder'; type: { kind: 'OBJECT'; name: 'EnsureMachineRemoteBuilderPayload'; ofType: null; } }; 'establishSshKey': { name: 'establishSshKey'; type: { kind: 'OBJECT'; name: 'EstablishSSHKeyPayload'; ofType: null; } }; 'exportDnsZone': { name: 'exportDnsZone'; type: { kind: 'OBJECT'; name: 'ExportDNSZonePayload'; ofType: null; } }; 'extendVolume': { name: 'extendVolume'; type: { kind: 'OBJECT'; name: 'ExtendVolumePayload'; ofType: null; } }; 'finishBuild': { name: 'finishBuild'; type: { kind: 'OBJECT'; name: 'FinishBuildPayload'; ofType: null; } }; 'forkVolume': { name: 'forkVolume'; type: { kind: 'OBJECT'; name: 'ForkVolumePayload'; ofType: null; } }; 'grantPostgresClusterUserAccess': { name: 'grantPostgresClusterUserAccess'; type: { kind: 'OBJECT'; name: 'GrantPostgresClusterUserAccessPayload'; ofType: null; } }; 'importCertificate': { name: 'importCertificate'; type: { kind: 'OBJECT'; name: 'ImportCertificatePayload'; ofType: null; } }; 'importDnsZone': { name: 'importDnsZone'; type: { kind: 'OBJECT'; name: 'ImportDNSZonePayload'; ofType: null; } }; 'issueCertificate': { name: 'issueCertificate'; type: { kind: 'OBJECT'; name: 'IssueCertificatePayload'; ofType: null; } }; 'killMachine': { name: 'killMachine'; type: { kind: 'OBJECT'; name: 'KillMachinePayload'; ofType: null; } }; 'launchMachine': { name: 'launchMachine'; type: { kind: 'OBJECT'; name: 'LaunchMachinePayload'; ofType: null; } }; 'lockApp': { name: 'lockApp'; type: { kind: 'OBJECT'; name: 'LockAppPayload'; ofType: null; } }; 'logOut': { name: 'logOut'; type: { kind: 'OBJECT'; name: 'LogOutPayload'; ofType: null; } }; 'moveApp': { name: 'moveApp'; type: { kind: 'OBJECT'; name: 'MoveAppPayload'; ofType: null; } }; 'nomadToMachinesMigration': { name: 'nomadToMachinesMigration'; type: { kind: 'OBJECT'; name: 'NomadToMachinesMigrationPayload'; ofType: null; } }; 'nomadToMachinesMigrationPrep': { name: 'nomadToMachinesMigrationPrep'; type: { kind: 'OBJECT'; name: 'NomadToMachinesMigrationPrepPayload'; ofType: null; } }; 'pauseApp': { name: 'pauseApp'; type: { kind: 'OBJECT'; name: 'PauseAppPayload'; ofType: null; } }; 'registerDomain': { name: 'registerDomain'; type: { kind: 'OBJECT'; name: 'RegisterDomainPayload'; ofType: null; } }; 'releaseEgressIpAddress': { name: 'releaseEgressIpAddress'; type: { kind: 'OBJECT'; name: 'ReleaseEgressIPAddressPayload'; ofType: null; } }; 'releaseIpAddress': { name: 'releaseIpAddress'; type: { kind: 'OBJECT'; name: 'ReleaseIPAddressPayload'; ofType: null; } }; 'removeMachine': { name: 'removeMachine'; type: { kind: 'OBJECT'; name: 'RemoveMachinePayload'; ofType: null; } }; 'removeWireGuardPeer': { name: 'removeWireGuardPeer'; type: { kind: 'OBJECT'; name: 'RemoveWireGuardPeerPayload'; ofType: null; } }; 'resetAddOnPassword': { name: 'resetAddOnPassword'; type: { kind: 'OBJECT'; name: 'ResetAddOnPasswordPayload'; ofType: null; } }; 'restartAllocation': { name: 'restartAllocation'; type: { kind: 'OBJECT'; name: 'RestartAllocationPayload'; ofType: null; } }; 'restartApp': { name: 'restartApp'; type: { kind: 'OBJECT'; name: 'RestartAppPayload'; ofType: null; } }; 'restoreVolumeSnapshot': { name: 'restoreVolumeSnapshot'; type: { kind: 'OBJECT'; name: 'RestoreVolumeSnapshotPayload'; ofType: null; } }; 'resumeApp': { name: 'resumeApp'; type: { kind: 'OBJECT'; name: 'ResumeAppPayload'; ofType: null; } }; 'revokePostgresClusterUserAccess': { name: 'revokePostgresClusterUserAccess'; type: { kind: 'OBJECT'; name: 'RevokePostgresClusterUserAccessPayload'; ofType: null; } }; 'saveDeploymentSource': { name: 'saveDeploymentSource'; type: { kind: 'OBJECT'; name: 'SaveDeploymentSourcePayload'; ofType: null; } }; 'scaleApp': { name: 'scaleApp'; type: { kind: 'OBJECT'; name: 'ScaleAppPayload'; ofType: null; } }; 'setAppsV2DefaultOn': { name: 'setAppsV2DefaultOn'; type: { kind: 'OBJECT'; name: 'SetAppsv2DefaultOnPayload'; ofType: null; } }; 'setPagerdutyHandler': { name: 'setPagerdutyHandler'; type: { kind: 'OBJECT'; name: 'SetPagerdutyHandlerPayload'; ofType: null; } }; 'setPlatformVersion': { name: 'setPlatformVersion'; type: { kind: 'OBJECT'; name: 'SetPlatformVersionPayload'; ofType: null; } }; 'setSecrets': { name: 'setSecrets'; type: { kind: 'OBJECT'; name: 'SetSecretsPayload'; ofType: null; } }; 'setSlackHandler': { name: 'setSlackHandler'; type: { kind: 'OBJECT'; name: 'SetSlackHandlerPayload'; ofType: null; } }; 'setVmCount': { name: 'setVmCount'; type: { kind: 'OBJECT'; name: 'SetVMCountPayload'; ofType: null; } }; 'setVmSize': { name: 'setVmSize'; type: { kind: 'OBJECT'; name: 'SetVMSizePayload'; ofType: null; } }; 'startBuild': { name: 'startBuild'; type: { kind: 'OBJECT'; name: 'StartBuildPayload'; ofType: null; } }; 'startMachine': { name: 'startMachine'; type: { kind: 'OBJECT'; name: 'StartMachinePayload'; ofType: null; } }; 'stopAllocation': { name: 'stopAllocation'; type: { kind: 'OBJECT'; name: 'StopAllocationPayload'; ofType: null; } }; 'stopMachine': { name: 'stopMachine'; type: { kind: 'OBJECT'; name: 'StopMachinePayload'; ofType: null; } }; 'unlockApp': { name: 'unlockApp'; type: { kind: 'OBJECT'; name: 'UnlockAppPayload'; ofType: null; } }; 'unsetSecrets': { name: 'unsetSecrets'; type: { kind: 'OBJECT'; name: 'UnsetSecretsPayload'; ofType: null; } }; 'updateAddOn': { name: 'updateAddOn'; type: { kind: 'OBJECT'; name: 'UpdateAddOnPayload'; ofType: null; } }; 'updateAutoscaleConfig': { name: 'updateAutoscaleConfig'; type: { kind: 'OBJECT'; name: 'UpdateAutoscaleConfigPayload'; ofType: null; } }; 'updateDnsPortal': { name: 'updateDnsPortal'; type: { kind: 'OBJECT'; name: 'UpdateDNSPortalPayload'; ofType: null; } }; 'updateDnsRecord': { name: 'updateDnsRecord'; type: { kind: 'OBJECT'; name: 'UpdateDNSRecordPayload'; ofType: null; } }; 'updateDnsRecords': { name: 'updateDnsRecords'; type: { kind: 'OBJECT'; name: 'UpdateDNSRecordsPayload'; ofType: null; } }; 'updateOrganizationMembership': { name: 'updateOrganizationMembership'; type: { kind: 'OBJECT'; name: 'UpdateOrganizationMembershipPayload'; ofType: null; } }; 'updateRelease': { name: 'updateRelease'; type: { kind: 'OBJECT'; name: 'UpdateReleasePayload'; ofType: null; } }; 'updateRemoteBuilder': { name: 'updateRemoteBuilder'; type: { kind: 'OBJECT'; name: 'UpdateRemoteBuilderPayload'; ofType: null; } }; 'updateThirdPartyConfiguration': { name: 'updateThirdPartyConfiguration'; type: { kind: 'OBJECT'; name: 'UpdateThirdPartyConfigurationPayload'; ofType: null; } }; 'validateWireGuardPeers': { name: 'validateWireGuardPeers'; type: { kind: 'OBJECT'; name: 'ValidateWireGuardPeersPayload'; ofType: null; } }; }; };
    'Network': { kind: 'OBJECT'; name: 'Network'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'AccessToken' | 'AddOn' | 'AddOnPlan' | 'Allocation' | 'App' | 'AppCertificate' | 'AppChange' | 'Build' | 'Certificate' | 'CheckHTTPResponse' | 'CheckJob' | 'CheckJobRun' | 'DNSPortal' | 'DNSPortalSession' | 'DNSRecord' | 'DelegatedWireGuardToken' | 'Domain' | 'EgressIPAddress' | 'Host' | 'IPAddress' | 'Issue' | 'LimitedAccessToken' | 'LoggedCertificate' | 'Machine' | 'MachineIP' | 'Network' | 'Organization' | 'OrganizationInvitation' | 'PostgresClusterAttachment' | 'Release' | 'ReleaseCommand' | 'ReleaseUnprocessed' | 'Secret' | 'TemplateDeployment' | 'ThirdPartyConfiguration' | 'User' | 'UserCoupon' | 'VM' | 'Volume' | 'VolumeSnapshot' | 'WireGuardPeer'; };
    'NomadToMachinesMigrationInput': { kind: 'INPUT_OBJECT'; name: 'NomadToMachinesMigrationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'NomadToMachinesMigrationPayload': { kind: 'OBJECT'; name: 'NomadToMachinesMigrationPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'NomadToMachinesMigrationPrepInput': { kind: 'INPUT_OBJECT'; name: 'NomadToMachinesMigrationPrepInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'NomadToMachinesMigrationPrepPayload': { kind: 'OBJECT'; name: 'NomadToMachinesMigrationPrepPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Organization': { kind: 'OBJECT'; name: 'Organization'; fields: { 'activeDiscountName': { name: 'activeDiscountName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'addOnSsoLink': { name: 'addOnSsoLink'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'addOns': { name: 'addOns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnConnection'; ofType: null; }; } }; 'agreedToProviderTos': { name: 'agreedToProviderTos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'apps': { name: 'apps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConnection'; ofType: null; }; } }; 'billable': { name: 'billable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'billingStatus': { name: 'billingStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BillingStatus'; ofType: null; }; } }; 'creditBalance': { name: 'creditBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'creditBalanceFormatted': { name: 'creditBalanceFormatted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'delegatedWireGuardTokens': { name: 'delegatedWireGuardTokens'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DelegatedWireGuardTokenConnection'; ofType: null; }; } }; 'dnsPortal': { name: 'dnsPortal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; }; } }; 'dnsPortals': { name: 'dnsPortals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortalConnection'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'OBJECT'; name: 'Domain'; ofType: null; } }; 'domains': { name: 'domains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DomainConnection'; ofType: null; }; } }; 'extensionSsoLink': { name: 'extensionSsoLink'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'healthCheckHandlers': { name: 'healthCheckHandlers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckHandlerConnection'; ofType: null; }; } }; 'healthChecks': { name: 'healthChecks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internalNumericId': { name: 'internalNumericId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'invitations': { name: 'invitations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationInvitationConnection'; ofType: null; }; } }; 'isCreditCardSaved': { name: 'isCreditCardSaved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'limitedAccessTokens': { name: 'limitedAccessTokens'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitedAccessTokenConnection'; ofType: null; }; } }; 'loggedCertificates': { name: 'loggedCertificates'; type: { kind: 'OBJECT'; name: 'LoggedCertificateConnection'; ofType: null; } }; 'members': { name: 'members'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMembershipsConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'paidPlan': { name: 'paidPlan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'provisionsBetaExtensions': { name: 'provisionsBetaExtensions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'rawSlug': { name: 'rawSlug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'remoteBuilderApp': { name: 'remoteBuilderApp'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'remoteBuilderImage': { name: 'remoteBuilderImage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'settings': { name: 'settings'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sshCertificate': { name: 'sshCertificate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thirdPartyConfigurations': { name: 'thirdPartyConfigurations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ThirdPartyConfigurationConnection'; ofType: null; }; } }; 'trust': { name: 'trust'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationTrust'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationType'; ofType: null; }; } }; 'viewerRole': { name: 'viewerRole'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'wireGuardPeer': { name: 'wireGuardPeer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WireGuardPeer'; ofType: null; }; } }; 'wireGuardPeers': { name: 'wireGuardPeers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WireGuardPeerConnection'; ofType: null; }; } }; }; };
    'OrganizationAlertsEnabled': { name: 'OrganizationAlertsEnabled'; enumValues: 'ENABLED' | 'NOT_ENABLED'; };
    'OrganizationConnection': { kind: 'OBJECT'; name: 'OrganizationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OrganizationEdge': { kind: 'OBJECT'; name: 'OrganizationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; }; };
    'OrganizationInvitation': { kind: 'OBJECT'; name: 'OrganizationInvitation'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inviter': { name: 'inviter'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'redeemed': { name: 'redeemed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'redeemedAt': { name: 'redeemedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; }; };
    'OrganizationInvitationConnection': { kind: 'OBJECT'; name: 'OrganizationInvitationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationInvitationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationInvitation'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OrganizationInvitationEdge': { kind: 'OBJECT'; name: 'OrganizationInvitationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'OrganizationInvitation'; ofType: null; } }; }; };
    'OrganizationMemberRole': { name: 'OrganizationMemberRole'; enumValues: 'ADMIN' | 'MEMBER'; };
    'OrganizationMembershipsConnection': { kind: 'OBJECT'; name: 'OrganizationMembershipsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMembershipsEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OrganizationMembershipsEdge': { kind: 'OBJECT'; name: 'OrganizationMembershipsEdge'; fields: { 'alertsEnabled': { name: 'alertsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationAlertsEnabled'; ofType: null; }; } }; 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'joinedAt': { name: 'joinedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationMemberRole'; ofType: null; }; } }; }; };
    'OrganizationTrust': { name: 'OrganizationTrust'; enumValues: 'UNKNOWN' | 'RESTRICTED' | 'BANNED' | 'LOW' | 'HIGH'; };
    'OrganizationType': { name: 'OrganizationType'; enumValues: 'PERSONAL' | 'SHARED'; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PauseAppInput': { kind: 'INPUT_OBJECT'; name: 'PauseAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PauseAppPayload': { kind: 'OBJECT'; name: 'PauseAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PlatformVersionEnum': { name: 'PlatformVersionEnum'; enumValues: 'nomad' | 'machines' | 'detached'; };
    'PostgresClusterAppRole': { kind: 'OBJECT'; name: 'PostgresClusterAppRole'; fields: { 'databases': { name: 'databases'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterDatabase'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'users': { name: 'users'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterUser'; ofType: null; }; }; }; } }; }; };
    'PostgresClusterAttachment': { kind: 'OBJECT'; name: 'PostgresClusterAttachment'; fields: { 'databaseName': { name: 'databaseName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'databaseUser': { name: 'databaseUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'environmentVariableName': { name: 'environmentVariableName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'PostgresClusterAttachmentConnection': { kind: 'OBJECT'; name: 'PostgresClusterAttachmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAttachmentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAttachment'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PostgresClusterAttachmentEdge': { kind: 'OBJECT'; name: 'PostgresClusterAttachmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PostgresClusterAttachment'; ofType: null; } }; }; };
    'PostgresClusterDatabase': { kind: 'OBJECT'; name: 'PostgresClusterDatabase'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'users': { name: 'users'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'PostgresClusterUser': { kind: 'OBJECT'; name: 'PostgresClusterUser'; fields: { 'databases': { name: 'databases'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'isSuperuser': { name: 'isSuperuser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PriceTier': { kind: 'OBJECT'; name: 'PriceTier'; fields: { 'unitAmount': { name: 'unitAmount'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'upTo': { name: 'upTo'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; }; };
    'Principal': { kind: 'INTERFACE'; name: 'Principal'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'featureFlags': { name: 'featureFlags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'hasNodeproxyApps': { name: 'hasNodeproxyApps'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'lastRegion': { name: 'lastRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'personalOrganization': { name: 'personalOrganization'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; 'trust': { name: 'trust'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationTrust'; ofType: null; }; } }; 'twoFactorProtection': { name: 'twoFactorProtection'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'Macaroon' | 'User'; };
    'ProcessGroup': { kind: 'OBJECT'; name: 'ProcessGroup'; fields: { 'maxPerRegion': { name: 'maxPerRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'regions': { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vmSize': { name: 'vmSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VMSize'; ofType: null; }; } }; }; };
    'Product': { kind: 'OBJECT'; name: 'Product'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tiers': { name: 'tiers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceTier'; ofType: null; }; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'unitLabel': { name: 'unitLabel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PropertyInput': { kind: 'INPUT_OBJECT'; name: 'PropertyInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Queries': { kind: 'OBJECT'; name: 'Queries'; fields: { 'accessTokens': { name: 'accessTokens'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessTokenConnection'; ofType: null; }; } }; 'addOn': { name: 'addOn'; type: { kind: 'OBJECT'; name: 'AddOn'; ofType: null; } }; 'addOnPlans': { name: 'addOnPlans'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnPlanConnection'; ofType: null; }; } }; 'addOnProvider': { name: 'addOnProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnProvider'; ofType: null; }; } }; 'addOns': { name: 'addOns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnConnection'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appNameAvailable': { name: 'appNameAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'apps': { name: 'apps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConnection'; ofType: null; }; } }; 'canPerformBluegreenDeployment': { name: 'canPerformBluegreenDeployment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'certificate': { name: 'certificate'; type: { kind: 'OBJECT'; name: 'AppCertificate'; ofType: null; } }; 'checkJobs': { name: 'checkJobs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckJobConnection'; ofType: null; }; } }; 'checkLocations': { name: 'checkLocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckLocation'; ofType: null; }; }; }; } }; 'currentUser': { name: 'currentUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'OBJECT'; name: 'Domain'; ofType: null; } }; 'flapsAuthzCheck': { name: 'flapsAuthzCheck'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'githubIntegration': { name: 'githubIntegration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GithubIntegration'; ofType: null; }; } }; 'herokuIntegration': { name: 'herokuIntegration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'HerokuIntegration'; ofType: null; }; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'OBJECT'; name: 'IPAddress'; ofType: null; } }; 'latestImageDetails': { name: 'latestImageDetails'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ImageVersion'; ofType: null; }; } }; 'latestImageTag': { name: 'latestImageTag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; 'machines': { name: 'machines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MachineConnection'; ofType: null; }; } }; 'nearestRegion': { name: 'nearestRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Region'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'Node'; ofType: null; }; }; } }; 'organization': { name: 'organization'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; }; } }; 'personalOrganization': { name: 'personalOrganization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'platform': { name: 'platform'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FlyPlatform'; ofType: null; }; } }; 'postgresAttachments': { name: 'postgresAttachments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAttachmentConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; }; }; } }; 'userOnlyToken': { name: 'userOnlyToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'validateConfig': { name: 'validateConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConfig'; ofType: null; }; } }; 'viewer': { name: 'viewer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Principal'; ofType: null; }; } }; 'volume': { name: 'volume'; type: { kind: 'OBJECT'; name: 'Volume'; ofType: null; } }; }; };
    'Region': { kind: 'OBJECT'; name: 'Region'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gatewayAvailable': { name: 'gatewayAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'latitude': { name: 'latitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'longitude': { name: 'longitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'processGroup': { name: 'processGroup'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requiresPaidPlan': { name: 'requiresPaidPlan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'RegionPlacement': { kind: 'OBJECT'; name: 'RegionPlacement'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RegisterDomainInput': { kind: 'INPUT_OBJECT'; name: 'RegisterDomainInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'whoisPrivacy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'autoRenew'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'RegisterDomainPayload': { kind: 'OBJECT'; name: 'RegisterDomainPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; }; };
    'Release': { kind: 'OBJECT'; name: 'Release'; fields: { 'config': { name: 'config'; type: { kind: 'OBJECT'; name: 'AppConfig'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'deploymentStrategy': { name: 'deploymentStrategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeploymentStrategy'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'evaluationId': { name: 'evaluationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'imageRef': { name: 'imageRef'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'inProgress': { name: 'inProgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertedTo': { name: 'revertedTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stable': { name: 'stable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReleaseCommand': { kind: 'OBJECT'; name: 'ReleaseCommand'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'command': { name: 'command'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'evaluationId': { name: 'evaluationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'exitCode': { name: 'exitCode'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failed': { name: 'failed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inProgress': { name: 'inProgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'instanceId': { name: 'instanceId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'succeeded': { name: 'succeeded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ReleaseConnection': { kind: 'OBJECT'; name: 'ReleaseConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Release'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReleaseEdge': { kind: 'OBJECT'; name: 'ReleaseEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'ReleaseEgressIPAddressInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseEgressIPAddressInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'machineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ReleaseEgressIPAddressPayload': { kind: 'OBJECT'; name: 'ReleaseEgressIPAddressPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'v4': { name: 'v4'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'v6': { name: 'v6'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ReleaseIPAddressInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseIPAddressInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ipAddressId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'serviceName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ReleaseIPAddressPayload': { kind: 'OBJECT'; name: 'ReleaseIPAddressPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ReleaseUnprocessed': { kind: 'OBJECT'; name: 'ReleaseUnprocessed'; fields: { 'configDefinition': { name: 'configDefinition'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'deploymentStrategy': { name: 'deploymentStrategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeploymentStrategy'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'evaluationId': { name: 'evaluationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'imageRef': { name: 'imageRef'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'inProgress': { name: 'inProgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertedTo': { name: 'revertedTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stable': { name: 'stable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReleaseUnprocessedConnection': { kind: 'OBJECT'; name: 'ReleaseUnprocessedConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseUnprocessedEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseUnprocessed'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReleaseUnprocessedEdge': { kind: 'OBJECT'; name: 'ReleaseUnprocessedEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ReleaseUnprocessed'; ofType: null; } }; }; };
    'RemoteDockerBuilderAppRole': { kind: 'OBJECT'; name: 'RemoteDockerBuilderAppRole'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RemoveMachineInput': { kind: 'INPUT_OBJECT'; name: 'RemoveMachineInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'kill'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'RemoveMachinePayload': { kind: 'OBJECT'; name: 'RemoveMachinePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; }; };
    'RemoveWireGuardPeerInput': { kind: 'INPUT_OBJECT'; name: 'RemoveWireGuardPeerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'nats'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'RemoveWireGuardPeerPayload': { kind: 'OBJECT'; name: 'RemoveWireGuardPeerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'ResetAddOnPasswordInput': { kind: 'INPUT_OBJECT'; name: 'ResetAddOnPasswordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ResetAddOnPasswordPayload': { kind: 'OBJECT'; name: 'ResetAddOnPasswordPayload'; fields: { 'addOn': { name: 'addOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOn'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RestartAllocationInput': { kind: 'INPUT_OBJECT'; name: 'RestartAllocationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'allocId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'RestartAllocationPayload': { kind: 'OBJECT'; name: 'RestartAllocationPayload'; fields: { 'allocation': { name: 'allocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RestartAppInput': { kind: 'INPUT_OBJECT'; name: 'RestartAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'RestartAppPayload': { kind: 'OBJECT'; name: 'RestartAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RestoreVolumeSnapshotInput': { kind: 'INPUT_OBJECT'; name: 'RestoreVolumeSnapshotInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'volumeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'snapshotId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'RestoreVolumeSnapshotPayload': { kind: 'OBJECT'; name: 'RestoreVolumeSnapshotPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'snapshot': { name: 'snapshot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeSnapshot'; ofType: null; }; } }; 'volume': { name: 'volume'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; }; };
    'ResumeAppInput': { kind: 'INPUT_OBJECT'; name: 'ResumeAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ResumeAppPayload': { kind: 'OBJECT'; name: 'ResumeAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RevokePostgresClusterUserAccessInput': { kind: 'INPUT_OBJECT'; name: 'RevokePostgresClusterUserAccessInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'databaseName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'RevokePostgresClusterUserAccessPayload': { kind: 'OBJECT'; name: 'RevokePostgresClusterUserAccessPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'database': { name: 'database'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterDatabase'; ofType: null; }; } }; 'postgresClusterRole': { name: 'postgresClusterRole'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterAppRole'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PostgresClusterUser'; ofType: null; }; } }; }; };
    'RuntimeType': { name: 'RuntimeType'; enumValues: 'FIRECRACKER' | 'NODEPROXY'; };
    'SaveDeploymentSourceInput': { kind: 'INPUT_OBJECT'; name: 'SaveDeploymentSourceInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'repositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ref'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'baseDir'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'skipBuild'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SaveDeploymentSourcePayload': { kind: 'OBJECT'; name: 'SaveDeploymentSourcePayload'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'build': { name: 'build'; type: { kind: 'OBJECT'; name: 'Build'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ScaleAppInput': { kind: 'INPUT_OBJECT'; name: 'ScaleAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ScaleRegionInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ScaleAppPayload': { kind: 'OBJECT'; name: 'ScaleAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'delta': { name: 'delta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ScaleRegionChange'; ofType: null; }; }; }; } }; 'placement': { name: 'placement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RegionPlacement'; ofType: null; }; }; }; } }; }; };
    'ScaleRegionChange': { kind: 'OBJECT'; name: 'ScaleRegionChange'; fields: { 'fromCount': { name: 'fromCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'toCount': { name: 'toCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ScaleRegionInput': { kind: 'INPUT_OBJECT'; name: 'ScaleRegionInput'; isOneOf: false; inputFields: [{ name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'Secret': { kind: 'OBJECT'; name: 'Secret'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'SecretInput': { kind: 'INPUT_OBJECT'; name: 'SecretInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Service': { kind: 'OBJECT'; name: 'Service'; fields: { 'checks': { name: 'checks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Check'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'hardConcurrency': { name: 'hardConcurrency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'internalPort': { name: 'internalPort'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'ports': { name: 'ports'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ServicePort'; ofType: null; }; }; }; } }; 'protocol': { name: 'protocol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ServiceProtocolType'; ofType: null; }; } }; 'softConcurrency': { name: 'softConcurrency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ServiceHandlerType': { name: 'ServiceHandlerType'; enumValues: 'TLS' | 'PG_TLS' | 'HTTP' | 'EDGE_HTTP' | 'PROXY_PROTO'; };
    'ServiceInput': { kind: 'INPUT_OBJECT'; name: 'ServiceInput'; isOneOf: false; inputFields: [{ name: 'protocol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ServiceProtocolType'; ofType: null; }; }; defaultValue: null }, { name: 'ports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ServiceInputPort'; ofType: null; }; }; }; defaultValue: null }, { name: 'internalPort'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'checks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CheckInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'softConcurrency'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'hardConcurrency'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ServiceInputPort': { kind: 'INPUT_OBJECT'; name: 'ServiceInputPort'; isOneOf: false; inputFields: [{ name: 'port'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'handlers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ServiceHandlerType'; ofType: null; }; }; }; defaultValue: null }, { name: 'tlsOptions'; type: { kind: 'INPUT_OBJECT'; name: 'ServicePortTlsOptionsInput'; ofType: null; }; defaultValue: null }]; };
    'ServicePort': { kind: 'OBJECT'; name: 'ServicePort'; fields: { 'endPort': { name: 'endPort'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'handlers': { name: 'handlers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ServiceHandlerType'; ofType: null; }; }; }; } }; 'port': { name: 'port'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'startPort': { name: 'startPort'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ServicePortTlsOptionsInput': { kind: 'INPUT_OBJECT'; name: 'ServicePortTlsOptionsInput'; isOneOf: false; inputFields: [{ name: 'defaultSelfSigned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ServiceProtocolType': { name: 'ServiceProtocolType'; enumValues: 'TCP' | 'UDP'; };
    'SetAppsv2DefaultOnInput': { kind: 'INPUT_OBJECT'; name: 'SetAppsv2DefaultOnInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationSlug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'defaultOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'SetAppsv2DefaultOnPayload': { kind: 'OBJECT'; name: 'SetAppsv2DefaultOnPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'SetPagerdutyHandlerInput': { kind: 'INPUT_OBJECT'; name: 'SetPagerdutyHandlerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pagerdutyToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pagerdutyStatusMap'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'SetPagerdutyHandlerPayload': { kind: 'OBJECT'; name: 'SetPagerdutyHandlerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'handler': { name: 'handler'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckHandler'; ofType: null; }; } }; }; };
    'SetPlatformVersionInput': { kind: 'INPUT_OBJECT'; name: 'SetPlatformVersionInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'platformVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'lockId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'SetPlatformVersionPayload': { kind: 'OBJECT'; name: 'SetPlatformVersionPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SetSecretsInput': { kind: 'INPUT_OBJECT'; name: 'SetSecretsInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'secrets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SecretInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'replaceAll'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SetSecretsPayload': { kind: 'OBJECT'; name: 'SetSecretsPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'SetSlackHandlerInput': { kind: 'INPUT_OBJECT'; name: 'SetSlackHandlerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'slackWebhookUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'slackChannel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slackUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slackIconUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SetSlackHandlerPayload': { kind: 'OBJECT'; name: 'SetSlackHandlerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'handler': { name: 'handler'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'HealthCheckHandler'; ofType: null; }; } }; }; };
    'SetVMCountInput': { kind: 'INPUT_OBJECT'; name: 'SetVMCountInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'groupCounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VMCountInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'lockId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'SetVMCountPayload': { kind: 'OBJECT'; name: 'SetVMCountPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; 'taskGroupCounts': { name: 'taskGroupCounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaskGroupCount'; ofType: null; }; }; }; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'SetVMSizeInput': { kind: 'INPUT_OBJECT'; name: 'SetVMSizeInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sizeName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'memoryMb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'group'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SetVMSizePayload': { kind: 'OBJECT'; name: 'SetVMSizePayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'processGroup': { name: 'processGroup'; type: { kind: 'OBJECT'; name: 'ProcessGroup'; ofType: null; } }; 'vmSize': { name: 'vmSize'; type: { kind: 'OBJECT'; name: 'VMSize'; ofType: null; } }; }; };
    'StartBuildInput': { kind: 'INPUT_OBJECT'; name: 'StartBuildInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'StartBuildPayload': { kind: 'OBJECT'; name: 'StartBuildPayload'; fields: { 'build': { name: 'build'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Build'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StartMachineInput': { kind: 'INPUT_OBJECT'; name: 'StartMachineInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StartMachinePayload': { kind: 'OBJECT'; name: 'StartMachinePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; }; };
    'StopAllocationInput': { kind: 'INPUT_OBJECT'; name: 'StopAllocationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'allocId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'StopAllocationPayload': { kind: 'OBJECT'; name: 'StopAllocationPayload'; fields: { 'allocation': { name: 'allocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StopMachineInput': { kind: 'INPUT_OBJECT'; name: 'StopMachineInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'signal'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'killTimeoutSecs'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'StopMachinePayload': { kind: 'OBJECT'; name: 'StopMachinePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'machine': { name: 'machine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Machine'; ofType: null; }; } }; }; };
    'String': unknown;
    'TaskGroupCount': { kind: 'OBJECT'; name: 'TaskGroupCount'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TemplateDeployment': { kind: 'OBJECT'; name: 'TemplateDeployment'; fields: { 'apps': { name: 'apps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ThirdPartyConfiguration': { kind: 'OBJECT'; name: 'ThirdPartyConfiguration'; fields: { 'caveats': { name: 'caveats'; type: { kind: 'SCALAR'; name: 'CaveatSet'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'customLevel': { name: 'customLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; } }; 'flyctlLevel': { name: 'flyctlLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'uiexLevel': { name: 'uiexLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'ThirdPartyConfigurationConnection': { kind: 'OBJECT'; name: 'ThirdPartyConfigurationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ThirdPartyConfigurationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ThirdPartyConfiguration'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ThirdPartyConfigurationEdge': { kind: 'OBJECT'; name: 'ThirdPartyConfigurationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ThirdPartyConfiguration'; ofType: null; } }; }; };
    'ThirdPartyConfigurationLevel': { name: 'ThirdPartyConfigurationLevel'; enumValues: 'DISABLED' | 'OPT_IN' | 'MEMBER_OPT_OUT' | 'ADMIN_OPT_OUT' | 'REQUIRED'; };
    'UnlockAppInput': { kind: 'INPUT_OBJECT'; name: 'UnlockAppInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'lockId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'UnlockAppPayload': { kind: 'OBJECT'; name: 'UnlockAppPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UnsetSecretsInput': { kind: 'INPUT_OBJECT'; name: 'UnsetSecretsInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'keys'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'UnsetSecretsPayload': { kind: 'OBJECT'; name: 'UnsetSecretsPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'UpdateAddOnInput': { kind: 'INPUT_OBJECT'; name: 'UpdateAddOnInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'planId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'options'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'readRegions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateAddOnPayload': { kind: 'OBJECT'; name: 'UpdateAddOnPayload'; fields: { 'addOn': { name: 'addOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOn'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UpdateAutoscaleConfigInput': { kind: 'INPUT_OBJECT'; name: 'UpdateAutoscaleConfigInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'minCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'balanceRegions'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'regions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AutoscaleRegionConfigInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'resetRegions'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'UpdateAutoscaleConfigPayload': { kind: 'OBJECT'; name: 'UpdateAutoscaleConfigPayload'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UpdateDNSPortalInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDNSPortalInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dnsPortalId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'returnUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'returnUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'supportUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'supportUrlText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'primaryColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accentColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateDNSPortalPayload': { kind: 'OBJECT'; name: 'UpdateDNSPortalPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dnsPortal': { name: 'dnsPortal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSPortal'; ofType: null; }; } }; }; };
    'UpdateDNSRecordInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDNSRecordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'recordId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ttl'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'rdata'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateDNSRecordPayload': { kind: 'OBJECT'; name: 'UpdateDNSRecordPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'record': { name: 'record'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecord'; ofType: null; }; } }; }; };
    'UpdateDNSRecordsInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDNSRecordsInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'domainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DNSRecordChangeInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'UpdateDNSRecordsPayload': { kind: 'OBJECT'; name: 'UpdateDNSRecordsPayload'; fields: { 'changes': { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordDiff'; ofType: null; }; }; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DNSRecordWarning'; ofType: null; }; }; }; } }; }; };
    'UpdateOrganizationMembershipInput': { kind: 'INPUT_OBJECT'; name: 'UpdateOrganizationMembershipInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationMemberRole'; ofType: null; }; }; defaultValue: null }, { name: 'alertsEnabled'; type: { kind: 'ENUM'; name: 'OrganizationAlertsEnabled'; ofType: null; }; defaultValue: null }]; };
    'UpdateOrganizationMembershipPayload': { kind: 'OBJECT'; name: 'UpdateOrganizationMembershipPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'UpdateReleaseInput': { kind: 'INPUT_OBJECT'; name: 'UpdateReleaseInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'releaseId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'UpdateReleasePayload': { kind: 'OBJECT'; name: 'UpdateReleasePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Release'; ofType: null; }; } }; }; };
    'UpdateRemoteBuilderInput': { kind: 'INPUT_OBJECT'; name: 'UpdateRemoteBuilderInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateRemoteBuilderPayload': { kind: 'OBJECT'; name: 'UpdateRemoteBuilderPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; }; };
    'UpdateThirdPartyConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'UpdateThirdPartyConfigurationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thirdPartyConfigurationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'caveats'; type: { kind: 'SCALAR'; name: 'CaveatSet'; ofType: null; }; defaultValue: null }, { name: 'flyctlLevel'; type: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; defaultValue: null }, { name: 'uiexLevel'; type: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; defaultValue: null }, { name: 'customLevel'; type: { kind: 'ENUM'; name: 'ThirdPartyConfigurationLevel'; ofType: null; }; defaultValue: null }]; };
    'UpdateThirdPartyConfigurationPayload': { kind: 'OBJECT'; name: 'UpdateThirdPartyConfigurationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thirdPartyConfiguration': { name: 'thirdPartyConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ThirdPartyConfiguration'; ofType: null; }; } }; }; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'agreedToProviderTos': { name: 'agreedToProviderTos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enablePaidHobby': { name: 'enablePaidHobby'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'featureFlags': { name: 'featureFlags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'hasNodeproxyApps': { name: 'hasNodeproxyApps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internalNumericId': { name: 'internalNumericId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lastRegion': { name: 'lastRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; }; } }; 'personalOrganization': { name: 'personalOrganization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'trust': { name: 'trust'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationTrust'; ofType: null; }; } }; 'twoFactorProtection': { name: 'twoFactorProtection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UserCoupon': { kind: 'OBJECT'; name: 'UserCoupon'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; }; };
    'VM': { kind: 'OBJECT'; name: 'VM'; fields: { 'attachedVolumes': { name: 'attachedVolumes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeConnection'; ofType: null; }; } }; 'canary': { name: 'canary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'checks': { name: 'checks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckState'; ofType: null; }; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'criticalCheckCount': { name: 'criticalCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'desiredStatus': { name: 'desiredStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AllocationEvent'; ofType: null; }; }; }; } }; 'failed': { name: 'failed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthy': { name: 'healthy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'idShort': { name: 'idShort'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latestVersion': { name: 'latestVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'passingCheckCount': { name: 'passingCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'privateIP': { name: 'privateIP'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recentLogs': { name: 'recentLogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LogEntry'; ofType: null; }; }; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'restarts': { name: 'restarts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taskName': { name: 'taskName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalCheckCount': { name: 'totalCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'transitioning': { name: 'transitioning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'warningCheckCount': { name: 'warningCheckCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VMConnection': { kind: 'OBJECT'; name: 'VMConnection'; fields: { 'activeCount': { name: 'activeCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'completeCount': { name: 'completeCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VMEdge'; ofType: null; }; } }; 'failedCount': { name: 'failedCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'inactiveCount': { name: 'inactiveCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lostCount': { name: 'lostCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VM'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'pendingCount': { name: 'pendingCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'runningCount': { name: 'runningCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VMCountInput': { kind: 'INPUT_OBJECT'; name: 'VMCountInput'; isOneOf: false; inputFields: [{ name: 'group'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxPerRegion'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'VMEdge': { kind: 'OBJECT'; name: 'VMEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VM'; ofType: null; } }; }; };
    'VMSize': { kind: 'OBJECT'; name: 'VMSize'; fields: { 'cpuCores': { name: 'cpuCores'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'maxMemoryMb': { name: 'maxMemoryMb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'memoryGb': { name: 'memoryGb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'memoryIncrementsMb': { name: 'memoryIncrementsMb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; } }; 'memoryMb': { name: 'memoryMb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'priceMonth': { name: 'priceMonth'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'priceSecond': { name: 'priceSecond'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'ValidateWireGuardPeersInput': { kind: 'INPUT_OBJECT'; name: 'ValidateWireGuardPeersInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'peerIps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ValidateWireGuardPeersPayload': { kind: 'OBJECT'; name: 'ValidateWireGuardPeersPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'invalidPeerIps': { name: 'invalidPeerIps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'validPeerIps': { name: 'validPeerIps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Volume': { kind: 'OBJECT'; name: 'Volume'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'attachedAllocation': { name: 'attachedAllocation'; type: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; } }; 'attachedAllocationId': { name: 'attachedAllocationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'attachedMachine': { name: 'attachedMachine'; type: { kind: 'OBJECT'; name: 'Machine'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'encrypted': { name: 'encrypted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'host': { name: 'host'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Host'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internalId': { name: 'internalId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sizeGb': { name: 'sizeGb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'snapshotRetentionDays': { name: 'snapshotRetentionDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'snapshots': { name: 'snapshots'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeSnapshotConnection'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'usedBytes': { name: 'usedBytes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'VolumeConnection': { kind: 'OBJECT'; name: 'VolumeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VolumeEdge': { kind: 'OBJECT'; name: 'VolumeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Volume'; ofType: null; } }; }; };
    'VolumeSnapshot': { kind: 'OBJECT'; name: 'VolumeSnapshot'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retentionDays': { name: 'retentionDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'volume': { name: 'volume'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Volume'; ofType: null; }; } }; }; };
    'VolumeSnapshotConnection': { kind: 'OBJECT'; name: 'VolumeSnapshotConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeSnapshotEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VolumeSnapshot'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VolumeSnapshotEdge': { kind: 'OBJECT'; name: 'VolumeSnapshotEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VolumeSnapshot'; ofType: null; } }; }; };
    'WireGuardPeer': { kind: 'OBJECT'; name: 'WireGuardPeer'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'network': { name: 'network'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'peerip': { name: 'peerip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pubkey': { name: 'pubkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WireGuardPeerConnection': { kind: 'OBJECT'; name: 'WireGuardPeerConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WireGuardPeerEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WireGuardPeer'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'WireGuardPeerEdge': { kind: 'OBJECT'; name: 'WireGuardPeerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'WireGuardPeer'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'fly';
  query: 'Queries';
  mutation: 'Mutations';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
